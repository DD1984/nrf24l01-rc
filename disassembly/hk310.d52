;
;  D52 V3.4.1 8052 Disassembly of hk310.hex
;  2014/11/16 09:22
;
	org	0
;
X0000:	ljmp	reset_ram	; 0000   02 09 df   .._	; Vector: Reset
;
X0003:	lcall	rf_get_status	; 0003   12 13 fe   ..~	; Vector: Interrupt from pin GP INT0, GP INT1 or GP INT2
X0006:	mov	a,r7		; 0006   ef         o
X0007:	anl	a,#70h		; 0007   54 70      Tp
	mov	r7,a		; 0009   ff         .
	ret			; 000a   22         "
;
	ljmp	timer0_handler	; 000b   02 05 3f   ..?	; Vector: Timer 0 overflow
;
; ************************************************************************
rf_setup_address_width:
	mov	a,r7		; 000e   ef         o
	add	a,#0feh		; 000f   24 fe      $~
	anl	a,#3		; 0011   54 03      T.
X0013:	mov	r7,a		; 0013   ff         .	; Vector: Power Failure
X0014:	mov	r6,rb3r1	; 0014   ae 19      ..
	mov	a,r6		; 0016   ee         n
	anl	a,#0fch		; 0017   54 fc      T|
	orl	a,r7		; 0019   4f         O
	mov	rb3r1,a		; 001a   f5 19      u.
	mov	r5,rb3r1	; 001c   ad 19      -.
	mov	r7,#3		; 001e   7f 03      ..	; SETUP_AW
	ljmp	spi_write_register; 0020   02 11 c7   ..G
;
	ljmp	uart_handler	; 0023   02 07 0f   ...	; Vector: Serial channel
;
X0026:	mov	a,3ah		; 0026   e5 3a      e:
	dec	3ah		; 0028   15 3a      .:
	mov	r4,39h		; 002a   ac 39      ,9
	jnz	X0030		; 002c   70 02      p.
	dec	39h		; 002e   15 39      .9
X0030:	orl	a,r4		; 0030   4c         L
	jz	X0049		; 0031   60 16      `.
	mov	dpl,r7		; 0033   8f 82      ..
	mov	dph,r6		; 0035   8e 83      ..
	movx	a,@dptr		; 0037   e0         `
	lcall	set_indirect_r1_r2; 0038   12 08 35   ..5
	inc	r7		; 003b   0f         .
	cjne	r7,#0,X0040	; 003c   bf 00 01   ?..
X003f:	inc	r6		; 003f   0e         .
X0040:	mov	a,#1		; 0040   74 01      t.
X0042:	add	a,r1		; 0042   29         )
X0043:	mov	r1,a		; 0043   f9         y	; Vector: RF SPI ready
X0044:	clr	a		; 0044   e4         d
X0045:	addc	a,r2		; 0045   3a         :
	mov	r2,a		; 0046   fa         z
	sjmp	X0026		; 0047   80 dd      .]
;
X0049:	ret			; 0049   22         "
;
	ret			; 004a   22         "
;
	ljmp	rf_interrupt_handler; 004b   02 04 3d   ..=	; Vector: RF Interrupt
;
; ************************************************************************
; Init
; ************************************************************************
init:	lcall	init_gpio	; 004e   12 11 f5   ..u
	lcall	init_eeprom_bind_data; 0051   12 02 bf   ..?
	lcall	read_current_model_no_from_eeprom; 0054   12 13 35   ..5
	lcall	make_bind_packets; 0057   12 06 2e   ...
	setb	RFCON_rfcken	; 005a   d2 ea      Rj
	setb	IEN1_rfirq	; 005c   d2 b9      R9
	lcall	init_rf		; 005e   12 0d dc   ..\
	lcall	init_timer0	; 0061   12 13 90   ...
	mov	r7,#5		; 0064   7f 05      ..
	lcall	init_serial	; 0066   12 0e 95   ...
X0069:	lcall	get_osc_status	; 0069   12 13 59   ..Y
	cjne	r7,#2,X0069	; 006c   bf 02 fa   ?.z	; Wait for the XTAL oscillator
	mov	IP0,#10h	; 006f   75 a9 10   u).
	mov	IP1,#10h	; 0072   75 b9 10   u9.
	setb	IEN0_all	; 0075   d2 af      R/
	mov	dptr,#X00a0	; 0077   90 00 a0   .. 
	clr	a		; 007a   e4         d
	movx	@dptr,a		; 007b   f0         p
	inc	dptr		; 007c   a3         #
	mov	a,#2fh		; 007d   74 2f      t/
	movx	@dptr,a		; 007f   f0         p
	inc	dptr		; 0080   a3         #
	clr	a		; 0081   e4         d
	movx	@dptr,a		; 0082   f0         p
	inc	dptr		; 0083   a3         #
	mov	a,#0f8h		; 0084   74 f8      tx
	movx	@dptr,a		; 0086   f0         p
	inc	dptr		; 0087   a3         #
	clr	a		; 0088   e4         d
	movx	@dptr,a		; 0089   f0         p
	inc	dptr		; 008a   a3         #
	mov	a,#2fh		; 008b   74 2f      t/
	movx	@dptr,a		; 008d   f0         p
	inc	dptr		; 008e   a3         #
	clr	a		; 008f   e4         d
	movx	@dptr,a		; 0090   f0         p
X0091:	inc	dptr		; 0091   a3         #
X0092:	mov	a,#0f8h		; 0092   74 f8      tx
	movx	@dptr,a		; 0094   f0         p
X0095:	inc	dptr		; 0095   a3         #
	clr	a		; 0096   e4         d
	movx	@dptr,a		; 0097   f0         p
	inc	dptr		; 0098   a3         #
	mov	a,#2fh		; 0099   74 2f      t/
	movx	@dptr,a		; 009b   f0         p
	inc	dptr		; 009c   a3         #
	clr	a		; 009d   e4         d
	movx	@dptr,a		; 009e   f0         p
	inc	dptr		; 009f   a3         #
X00a0:	mov	a,#0f8h		; 00a0   74 f8      tx
X00a2:	movx	@dptr,a		; 00a2   f0         p
X00a3:	mov	P0DIR,#0fch	; 00a3   75 93 fc   u.|
	anl	P1DIR,#0efh	; 00a6   53 94 ef   S.o
	clr	TCON_tr0	; 00a9   c2 8c      B.
	clr	a		; 00ab   e4         d
	mov	rb3r0,a		; 00ac   f5 18      u.
; ***************************************************************************
; MAIN LOOP
; ***************************************************************************
main:	mov	a,f_servo_data	; 00ae   e5 5f      e_
	jnz	servo_data_received; 00b0   70 03      p.
	ljmp	check_model_cmd_received; 00b2   02 02 8a   ...
;
; ***************************************************************************
servo_data_received:
	mov	a,rb3r0		; 00b5   e5 18      e.
	clr	c		; 00b7   c3         C
	subb	a,#14h		; 00b8   94 14      ..
	jnc	copy_from_uart_buffer; 00ba   50 04      P.
	inc	rb3r0		; 00bc   05 18      ..
	sjmp	X00c2		; 00be   80 02      ..
;
; ***************************************************************************
; Copy 6 bytes from uart_buffer to uart_data
copy_from_uart_buffer:
	setb	TCON_tr0	; 00c0   d2 8c      R.
X00c2:	clr	IEN0_serial	; 00c2   c2 ac      B,
	clr	a		; 00c4   e4         d
	mov	r7,a		; 00c5   ff         .
X00c6:	mov	a,#9ah		; 00c6   74 9a      t.	; uart_buffer
	add	a,r7		; 00c8   2f         /
	mov	dpl,a		; 00c9   f5 82      u.
	clr	a		; 00cb   e4         d
	addc	a,#0		; 00cc   34 00      4.
	mov	dph,a		; 00ce   f5 83      u.
	movx	a,@dptr		; 00d0   e0         `
	mov	r6,a		; 00d1   fe         ~
	mov	a,#2		; 00d2   74 02      t.	; uart_data
	add	a,r7		; 00d4   2f         /
	mov	dpl,a		; 00d5   f5 82      u.
	clr	a		; 00d7   e4         d
	addc	a,#0		; 00d8   34 00      4.
	mov	dph,a		; 00da   f5 83      u.
	mov	a,r6		; 00dc   ee         n
	movx	@dptr,a		; 00dd   f0         p
	inc	r7		; 00de   0f         .
	cjne	r7,#6,X00c6	; 00df   bf 06 e4   ?.d
	setb	IEN0_serial	; 00e2   d2 ac      R,
; If high nibble of the received data byte 3 is 0xa0 we
; are dealing with stick data.
; Note: this is actually weird, because failsafe data is checked byte 2
; being 0bbh. Byte 3 of failsafe is 0cch
	mov	dptr,#uart_data+2; 00e4   90 00 03   ...
	movx	a,@dptr		; 00e7   e0         `
	mov	r7,a		; 00e8   ff         .
	anl	a,#0f0h		; 00e9   54 f0      Tp
	xrl	a,#0a0h		; 00eb   64 a0      d 
	jz	process_stick_data; 00ed   60 03      `.
	ljmp	check_if_failsafe_data; 00ef   02 02 28   ..(
;
; ***************************************************************************
; Converts the stick data received from the UART into the data
; sent across the air.
;
; The received data is 12 bit, with center (1500us) being 0x465
; The data sent across the air is the timer value that has to be set
; to give the desired time until the timer overflows. The timer tick is
; 750ns.
;
; The algorithm to calculate the timer value is as follows:
;
;   timer_value = (uart_data * 14 / 10) + 0xf200
;
; Three channels are calculated that way
; ***************************************************************************
process_stick_data:
	mov	dptr,#stick_data; 00f2   90 00 a0   .. 
	movx	@dptr,a		; 00f5   f0         p
	inc	dptr		; 00f6   a3         #
	mov	a,r7		; 00f7   ef         o
	movx	@dptr,a		; 00f8   f0         p
	movx	a,@dptr		; 00f9   e0         `
	mov	r7,#0		; 00fa   7f 00      ..
	mov	r6,a		; 00fc   fe         ~
	mov	dptr,#stick_data; 00fd   90 00 a0   .. 
	movx	@dptr,a		; 0100   f0         p
	inc	dptr		; 0101   a3         #
	mov	a,r7		; 0102   ef         o
	movx	@dptr,a		; 0103   f0         p
	mov	a,r6		; 0104   ee         n
	anl	a,#0fh		; 0105   54 0f      T.
	mov	dptr,#stick_data; 0107   90 00 a0   .. 
	movx	@dptr,a		; 010a   f0         p
	inc	dptr		; 010b   a3         #
	mov	a,r7		; 010c   ef         o
	movx	@dptr,a		; 010d   f0         p
	mov	dptr,#uart_data+3; 010e   90 00 05   ...
	movx	a,@dptr		; 0111   e0         `
	mov	r7,a		; 0112   ff         .
	mov	dptr,#stick_data+1; 0113   90 00 a1   ..!
	movx	a,@dptr		; 0116   e0         `
	add	a,r7		; 0117   2f         /
	movx	@dptr,a		; 0118   f0         p
	mov	dptr,#stick_data; 0119   90 00 a0   .. 
	movx	a,@dptr		; 011c   e0         `
	addc	a,#0		; 011d   34 00      4.
	movx	@dptr,a		; 011f   f0         p
	movx	a,@dptr		; 0120   e0         `
	mov	r6,a		; 0121   fe         ~
	inc	dptr		; 0122   a3         #
	movx	a,@dptr		; 0123   e0         `
	mov	r7,a		; 0124   ff         .
	mov	r4,#0		; 0125   7c 00      |.
	mov	r5,#0eh		; 0127   7d 0e      }.
	lcall	mul_16		; 0129   12 08 47   ..G
	mov	dptr,#stick_data; 012c   90 00 a0   .. 
	mov	a,r6		; 012f   ee         n
	movx	@dptr,a		; 0130   f0         p
	inc	dptr		; 0131   a3         #
	mov	a,r7		; 0132   ef         o
	movx	@dptr,a		; 0133   f0         p
	mov	dptr,#stick_data; 0134   90 00 a0   .. 
	movx	a,@dptr		; 0137   e0         `
	mov	r6,a		; 0138   fe         ~
	inc	dptr		; 0139   a3         #
	movx	a,@dptr		; 013a   e0         `
	mov	r7,a		; 013b   ff         .
	mov	r5,#0ah		; 013c   7d 0a      }.
	lcall	div_16		; 013e   12 08 59   ..Y
	mov	dptr,#stick_data; 0141   90 00 a0   .. 
	mov	a,r6		; 0144   ee         n
	movx	@dptr,a		; 0145   f0         p
	inc	dptr		; 0146   a3         #
	mov	a,r7		; 0147   ef         o
	movx	@dptr,a		; 0148   f0         p
	movx	a,@dptr		; 0149   e0         `
	add	a,#0		; 014a   24 00      $.
	movx	@dptr,a		; 014c   f0         p
	mov	dptr,#stick_data; 014d   90 00 a0   .. 
	movx	a,@dptr		; 0150   e0         `
	addc	a,#0f2h		; 0151   34 f2      4r
	movx	@dptr,a		; 0153   f0         p
	mov	dptr,#uart_data+2; 0154   90 00 04   ...
	movx	a,@dptr		; 0157   e0         `
	mov	r3,a		; 0158   fb         {
	mov	r2,#0		; 0159   7a 00      z.
	mov	dptr,#stick_data+2; 015b   90 00 a2   .."
	mov	a,r2		; 015e   ea         j
	movx	@dptr,a		; 015f   f0         p
	inc	dptr		; 0160   a3         #
	mov	a,r3		; 0161   eb         k
	movx	@dptr,a		; 0162   f0         p
	movx	a,@dptr		; 0163   e0         `
	swap	a		; 0164   c4         D
	mov	r0,a		; 0165   f8         x
	anl	a,#0fh		; 0166   54 0f      T.
	xch	a,r0		; 0168   c8         H
	xrl	a,r0		; 0169   68         h
	mov	r7,a		; 016a   ff         .
	mov	dptr,#stick_data+2; 016b   90 00 a2   .."
	movx	a,@dptr		; 016e   e0         `
	swap	a		; 016f   c4         D
	anl	a,#0f0h		; 0170   54 f0      Tp
	orl	a,r0		; 0172   48         H
	mov	r6,a		; 0173   fe         ~
	movx	@dptr,a		; 0174   f0         p
	inc	dptr		; 0175   a3         #
	mov	a,r7		; 0176   ef         o
	movx	@dptr,a		; 0177   f0         p
	mov	a,r6		; 0178   ee         n
	anl	a,#0fh		; 0179   54 0f      T.
	mov	dptr,#stick_data+2; 017b   90 00 a2   .."
	movx	@dptr,a		; 017e   f0         p
	inc	dptr		; 017f   a3         #
	clr	a		; 0180   e4         d
	movx	@dptr,a		; 0181   f0         p
	mov	dptr,#uart_data+4; 0182   90 00 06   ...
	movx	a,@dptr		; 0185   e0         `
	mov	r7,a		; 0186   ff         .
	mov	dptr,#stick_data+3; 0187   90 00 a3   ..#
	movx	a,@dptr		; 018a   e0         `
	add	a,r7		; 018b   2f         /
	movx	@dptr,a		; 018c   f0         p
	mov	dptr,#stick_data+2; 018d   90 00 a2   .."
	movx	a,@dptr		; 0190   e0         `
	addc	a,#0		; 0191   34 00      4.
	movx	@dptr,a		; 0193   f0         p
	movx	a,@dptr		; 0194   e0         `
	mov	r6,a		; 0195   fe         ~
	inc	dptr		; 0196   a3         #
	movx	a,@dptr		; 0197   e0         `
	mov	r7,a		; 0198   ff         .
	mov	r4,#0		; 0199   7c 00      |.
	mov	r5,#0eh		; 019b   7d 0e      }.
	lcall	mul_16		; 019d   12 08 47   ..G
	mov	dptr,#stick_data+2; 01a0   90 00 a2   .."
	mov	a,r6		; 01a3   ee         n
	movx	@dptr,a		; 01a4   f0         p
	inc	dptr		; 01a5   a3         #
	mov	a,r7		; 01a6   ef         o
	movx	@dptr,a		; 01a7   f0         p
	mov	dptr,#stick_data+2; 01a8   90 00 a2   .."
	movx	a,@dptr		; 01ab   e0         `
	mov	r6,a		; 01ac   fe         ~
	inc	dptr		; 01ad   a3         #
	movx	a,@dptr		; 01ae   e0         `
	mov	r7,a		; 01af   ff         .
	mov	r5,#0ah		; 01b0   7d 0a      }.
	lcall	div_16		; 01b2   12 08 59   ..Y
	mov	dptr,#stick_data+2; 01b5   90 00 a2   .."
	mov	a,r6		; 01b8   ee         n
	movx	@dptr,a		; 01b9   f0         p
	inc	dptr		; 01ba   a3         #
	mov	a,r7		; 01bb   ef         o
	movx	@dptr,a		; 01bc   f0         p
	movx	a,@dptr		; 01bd   e0         `
	add	a,#0		; 01be   24 00      $.
	movx	@dptr,a		; 01c0   f0         p
	mov	dptr,#stick_data+2; 01c1   90 00 a2   .."
	movx	a,@dptr		; 01c4   e0         `
	addc	a,#0f2h		; 01c5   34 f2      4r
	movx	@dptr,a		; 01c7   f0         p
	mov	dptr,#stick_data+4; 01c8   90 00 a4   ..$
	mov	a,r2		; 01cb   ea         j
	movx	@dptr,a		; 01cc   f0         p
	inc	dptr		; 01cd   a3         #
	mov	a,r3		; 01ce   eb         k
	movx	@dptr,a		; 01cf   f0         p
	movx	a,@dptr		; 01d0   e0         `
	mov	r7,#0		; 01d1   7f 00      ..
	mov	r6,a		; 01d3   fe         ~
	mov	dptr,#stick_data+4; 01d4   90 00 a4   ..$
	movx	@dptr,a		; 01d7   f0         p
	inc	dptr		; 01d8   a3         #
	mov	a,r7		; 01d9   ef         o
	movx	@dptr,a		; 01da   f0         p
	mov	a,r6		; 01db   ee         n
	anl	a,#0fh		; 01dc   54 0f      T.
	mov	dptr,#stick_data+4; 01de   90 00 a4   ..$
	movx	@dptr,a		; 01e1   f0         p
	inc	dptr		; 01e2   a3         #
	mov	a,r7		; 01e3   ef         o
	movx	@dptr,a		; 01e4   f0         p
	mov	dptr,#uart_data+5; 01e5   90 00 07   ...
	movx	a,@dptr		; 01e8   e0         `
	mov	r7,a		; 01e9   ff         .
	mov	dptr,#stick_data+5; 01ea   90 00 a5   ..%
	movx	a,@dptr		; 01ed   e0         `
	add	a,r7		; 01ee   2f         /
	movx	@dptr,a		; 01ef   f0         p
	mov	dptr,#stick_data+4; 01f0   90 00 a4   ..$
	movx	a,@dptr		; 01f3   e0         `
	addc	a,#0		; 01f4   34 00      4.
	movx	@dptr,a		; 01f6   f0         p
	movx	a,@dptr		; 01f7   e0         `
	mov	r6,a		; 01f8   fe         ~
	inc	dptr		; 01f9   a3         #
	movx	a,@dptr		; 01fa   e0         `
	mov	r7,a		; 01fb   ff         .
	mov	r4,#0		; 01fc   7c 00      |.
	mov	r5,#0eh		; 01fe   7d 0e      }.
	lcall	mul_16		; 0200   12 08 47   ..G
	mov	dptr,#stick_data+4; 0203   90 00 a4   ..$
	mov	a,r6		; 0206   ee         n
	movx	@dptr,a		; 0207   f0         p
	inc	dptr		; 0208   a3         #
	mov	a,r7		; 0209   ef         o
	movx	@dptr,a		; 020a   f0         p
	mov	r5,#0ah		; 020b   7d 0a      }.
	lcall	div_16		; 020d   12 08 59   ..Y
	mov	dptr,#stick_data+4; 0210   90 00 a4   ..$
	mov	a,r6		; 0213   ee         n
	movx	@dptr,a		; 0214   f0         p
	inc	dptr		; 0215   a3         #
	mov	a,r7		; 0216   ef         o
	movx	@dptr,a		; 0217   f0         p
	movx	a,@dptr		; 0218   e0         `
	add	a,#0		; 0219   24 00      $.
	movx	@dptr,a		; 021b   f0         p
	mov	dptr,#stick_data+4; 021c   90 00 a4   ..$
	movx	a,@dptr		; 021f   e0         `
	addc	a,#0f2h		; 0220   34 f2      4r
	movx	@dptr,a		; 0222   f0         p
	mov	f_stick_data,#1	; 0223   75 63 01   uc.
	sjmp	uart_data_processed; 0226   80 5f      ._
;
; ***************************************************************************
check_if_failsafe_data:
	mov	dptr,#uart_data+1; 0228   90 00 03   ...
	movx	a,@dptr		; 022b   e0         `
; Check if 2nd payload byte is 0bbh, which indicates failsafe
	xrl	a,#0bbh		; 022c   64 bb      d;
	jnz	uart_data_processed; 022e   70 57      pW
	mov	dptr,#uart_data+5; 0230   90 00 07   ...
	movx	a,@dptr		; 0233   e0         `
	jb	acc.2,X023f	; 0234   20 e2 08    b.
	mov	dptr,#failsafe_tx_value; 0237   90 00 00   ...
	mov	a,#5bh		; 023a   74 5b      t[	; failsafe disabled
	movx	@dptr,a		; 023c   f0         p
	sjmp	uart_data_processed; 023d   80 48      .H
;
X023f:	mov	dptr,#uart_data+3; 023f   90 00 05   ...
	movx	a,@dptr		; 0242   e0         `
; Calculate timer value from incoming +-120% value which is centered at 78h:
; (percent * 8) + 0f480h
; Result is actually slightly off: 1487us instead of 1500us
	mov	b,#8		; 0243   75 f0 08   up.
	mul	ab		; 0246   a4         $
	add	a,#80h		; 0247   24 80      $.
	mov	r7,a		; 0249   ff         .
	mov	a,b		; 024a   e5 f0      ep
	addc	a,#0f4h		; 024c   34 f4      4t
	mov	r6,a		; 024e   fe         ~
	mov	dptr,#failsafe_tx_value; 024f   90 00 00   ...
	mov	a,#5ah		; 0252   74 5a      tZ
	movx	@dptr,a		; 0254   f0         p
	mov	r5,rb0r7	; 0255   ad 07      -.
	mov	dptr,#fs_st_l	; 0257   90 00 40   ..@
	mov	a,r5		; 025a   ed         m
	movx	@dptr,a		; 025b   f0         p
	mov	r7,rb0r6	; 025c   af 06      /.
	mov	dptr,#fs_st_h	; 025e   90 00 3e   ..>
	mov	a,r7		; 0261   ef         o
	movx	@dptr,a		; 0262   f0         p
	mov	dptr,#uart_data+4; 0263   90 00 06   ...
	movx	a,@dptr		; 0266   e0         `
	mov	b,#8		; 0267   75 f0 08   up.
	mul	ab		; 026a   a4         $
	add	a,#80h		; 026b   24 80      $.
	mov	r7,a		; 026d   ff         .
	mov	a,b		; 026e   e5 f0      ep
	addc	a,#0f4h		; 0270   34 f4      4t
	mov	r6,a		; 0272   fe         ~
	mov	dptr,#failsafe_tx_value; 0273   90 00 00   ...
	mov	a,#5ah		; 0276   74 5a      tZ
	movx	@dptr,a		; 0278   f0         p
	mov	r5,rb0r7	; 0279   ad 07      -.
	mov	dptr,#fs_th_l	; 027b   90 00 3d   ..=
	mov	a,r5		; 027e   ed         m
	movx	@dptr,a		; 027f   f0         p
	mov	r7,rb0r6	; 0280   af 06      /.
	mov	dptr,#fs_th_h	; 0282   90 00 14   ...
	mov	a,r7		; 0285   ef         o
	movx	@dptr,a		; 0286   f0         p
; ***************************************************************************
uart_data_processed:
	clr	a		; 0287   e4         d
	mov	f_servo_data,a	; 0288   f5 5f      u_
; ***************************************************************************
check_model_cmd_received:
	mov	a,f_model_no	; 028a   e5 5e      e^
	jnz	process_new_model; 028c   70 03      p.
	ljmp	main		; 028e   02 00 ae   ...
;
; ***************************************************************************
process_new_model:
	clr	a		; 0291   e4         d
	mov	f_model_no,a	; 0292   f5 5e      u^
	mov	dptr,#X0095	; 0294   90 00 95   ...	; payload+1: contains the model number!
	movx	a,@dptr		; 0297   e0         `
	setb	c		; 0298   d3         S
	subb	a,#1		; 0299   94 01      ..
	jnc	change_model	; 029b   50 03      P.
	ljmp	main		; 029d   02 00 ae   ...
;
; ***************************************************************************
change_model:
	clr	TCON_tr0	; 02a0   c2 8c      B.
	clr	IEN1_rfirq	; 02a2   c2 b9      B9
	xrl	p0,#3		; 02a4   63 80 03   c..
	lcall	read_current_model_no_from_eeprom; 02a7   12 13 35   ..5
	mov	dptr,#X0095	; 02aa   90 00 95   ...
	movx	a,@dptr		; 02ad   e0         `
	add	a,#0feh		; 02ae   24 fe      $~
	mov	dptr,#X00a8	; 02b0   90 00 a8   ..(
	movx	@dptr,a		; 02b3   f0         p
	lcall	read_current_model_bind_data_from_eeprom; 02b4   12 0b ac   ..,
	lcall	make_bind_packets; 02b7   12 06 2e   ...
	setb	IEN1_rfirq	; 02ba   d2 b9      R9
	ljmp	main		; 02bc   02 00 ae   ...
;
; ***************************************************************************
init_eeprom_bind_data:
	mov	r7,#9ah		; 02bf   7f 9a      ..
	mov	r6,#1		; 02c1   7e 01      ~.
	lcall	read_byte_from_eeprom; 02c3   12 11 93   ...
	mov	rb3r1,r7	; 02c6   8f 19      ..
	mov	r7,#9bh		; 02c8   7f 9b      ..
	mov	r6,#1		; 02ca   7e 01      ~.
	lcall	read_byte_from_eeprom; 02cc   12 11 93   ...
	mov	rb3r2,r7	; 02cf   8f 1a      ..
	mov	a,rb3r1		; 02d1   e5 19      e.
	xrl	a,#0aah		; 02d3   64 aa      d*
	jnz	format_eeprom	; 02d5   70 72      pr
	mov	a,rb3r2		; 02d7   e5 1a      e.
	xrl	a,#0aah		; 02d9   64 aa      d*
	jnz	format_eeprom	; 02db   70 6c      pl
	mov	r7,a		; 02dd   ff         .
	mov	r6,a		; 02de   fe         ~
	lcall	read_byte_from_eeprom; 02df   12 11 93   ...
	mov	dptr,#X00a8	; 02e2   90 00 a8   ..(
	mov	a,r7		; 02e5   ef         o
	movx	@dptr,a		; 02e6   f0         p
	clr	a		; 02e7   e4         d
	mov	model_count,a	; 02e8   f5 1b      u.
X02ea:	mov	dptr,#X00a8	; 02ea   90 00 a8   ..(
	movx	a,@dptr		; 02ed   e0         `
	mov	b,#19h		; 02ee   75 f0 19   up.
	mul	ab		; 02f1   a4         $
	mov	r4,#0		; 02f2   7c 00      |.
	add	a,model_count	; 02f4   25 1b      %.
	mov	r7,a		; 02f6   ff         .
	mov	a,r4		; 02f7   ec         l
	addc	a,b		; 02f8   35 f0      5p
	mov	r6,a		; 02fa   fe         ~
	lcall	read_byte_from_eeprom; 02fb   12 11 93   ...
	mov	a,#64h		; 02fe   74 64      td
	add	a,model_count	; 0300   25 1b      %.
	mov	dpl,a		; 0302   f5 82      u.
	clr	a		; 0304   e4         d
	addc	a,#0		; 0305   34 00      4.
	mov	dph,a		; 0307   f5 83      u.
	mov	a,r7		; 0309   ef         o
	movx	@dptr,a		; 030a   f0         p
	inc	model_count	; 030b   05 1b      ..
	mov	a,model_count	; 030d   e5 1b      e.
	clr	c		; 030f   c3         C
	subb	a,#5		; 0310   94 05      ..
	jc	X02ea		; 0312   40 d6      @V
	clr	a		; 0314   e4         d
	mov	model_count,a	; 0315   f5 1b      u.
X0317:	mov	dptr,#X00a8	; 0317   90 00 a8   ..(
	movx	a,@dptr		; 031a   e0         `
	mov	b,#19h		; 031b   75 f0 19   up.
	mul	ab		; 031e   a4         $
	add	a,#5		; 031f   24 05      $.
	mov	r7,a		; 0321   ff         .
	clr	a		; 0322   e4         d
	addc	a,b		; 0323   35 f0      5p
	mov	r6,a		; 0325   fe         ~
	mov	r4,#0		; 0326   7c 00      |.
	mov	a,r7		; 0328   ef         o
	add	a,model_count	; 0329   25 1b      %.
	mov	r7,a		; 032b   ff         .
	mov	a,r4		; 032c   ec         l
	addc	a,r6		; 032d   3e         >
	mov	r6,a		; 032e   fe         ~
	lcall	read_byte_from_eeprom; 032f   12 11 93   ...
	mov	a,#50h		; 0332   74 50      tP
	add	a,model_count	; 0334   25 1b      %.
	mov	dpl,a		; 0336   f5 82      u.
	clr	a		; 0338   e4         d
	addc	a,#0		; 0339   34 00      4.
	mov	dph,a		; 033b   f5 83      u.
	mov	a,r7		; 033d   ef         o
	movx	@dptr,a		; 033e   f0         p
	inc	model_count	; 033f   05 1b      ..
	mov	a,model_count	; 0341   e5 1b      e.
	clr	c		; 0343   c3         C
	subb	a,#14h		; 0344   94 14      ..
	jc	X0317		; 0346   40 cf      @O
	ret			; 0348   22         "
;
; ***************************************************************************
format_eeprom:
	clr	a		; 0349   e4         d
	mov	model_count,a	; 034a   f5 1b      u.
X034c:	lcall	make_hop_data	; 034c   12 0f a1   ..!
	lcall	make_bind_data	; 034f   12 10 c9   ..I
	clr	a		; 0352   e4         d
	mov	count,a		; 0353   f5 1c      u.
X0355:	mov	a,model_count	; 0355   e5 1b      e.
	mov	b,#19h		; 0357   75 f0 19   up.
	mul	ab		; 035a   a4         $
	mov	r4,#0		; 035b   7c 00      |.
	add	a,count		; 035d   25 1c      %.
	mov	r7,a		; 035f   ff         .
	mov	a,r4		; 0360   ec         l
	addc	a,b		; 0361   35 f0      5p
	mov	r6,a		; 0363   fe         ~
	mov	a,#64h		; 0364   74 64      td
	add	a,count		; 0366   25 1c      %.
	mov	dpl,a		; 0368   f5 82      u.
	clr	a		; 036a   e4         d
	addc	a,#0		; 036b   34 00      4.
	mov	dph,a		; 036d   f5 83      u.
	movx	a,@dptr		; 036f   e0         `
	mov	r5,a		; 0370   fd         }
	lcall	write_byte_to_eeprom; 0371   12 11 74   ..t
	inc	count		; 0374   05 1c      ..
	mov	a,count		; 0376   e5 1c      e.
	clr	c		; 0378   c3         C
	subb	a,#5		; 0379   94 05      ..
	jc	X0355		; 037b   40 d8      @X
	clr	a		; 037d   e4         d
	mov	count,a		; 037e   f5 1c      u.
X0380:	mov	a,model_count	; 0380   e5 1b      e.
	mov	b,#19h		; 0382   75 f0 19   up.
	mul	ab		; 0385   a4         $
	add	a,#5		; 0386   24 05      $.
	mov	r7,a		; 0388   ff         .
	clr	a		; 0389   e4         d
	addc	a,b		; 038a   35 f0      5p
	mov	r6,a		; 038c   fe         ~
	mov	r4,#0		; 038d   7c 00      |.
	mov	a,r7		; 038f   ef         o
	add	a,count		; 0390   25 1c      %.
	mov	r7,a		; 0392   ff         .
	mov	a,r4		; 0393   ec         l
	addc	a,r6		; 0394   3e         >
	mov	r6,a		; 0395   fe         ~
	mov	a,#50h		; 0396   74 50      tP
	add	a,count		; 0398   25 1c      %.
	mov	dpl,a		; 039a   f5 82      u.
	clr	a		; 039c   e4         d
	addc	a,#0		; 039d   34 00      4.
	mov	dph,a		; 039f   f5 83      u.
	movx	a,@dptr		; 03a1   e0         `
	mov	r5,a		; 03a2   fd         }
	lcall	write_byte_to_eeprom; 03a3   12 11 74   ..t
	inc	count		; 03a6   05 1c      ..
	mov	a,count		; 03a8   e5 1c      e.
	clr	c		; 03aa   c3         C
	subb	a,#14h		; 03ab   94 14      ..
	jc	X0380		; 03ad   40 d1      @Q
	inc	model_count	; 03af   05 1b      ..
	mov	a,model_count	; 03b1   e5 1b      e.
	clr	c		; 03b3   c3         C
	subb	a,#10h		; 03b4   94 10      ..
	jc	X034c		; 03b6   40 94      @.
	mov	rb3r1,#0aah	; 03b8   75 19 aa   u.*
	mov	rb3r2,#0aah	; 03bb   75 1a aa   u.*
	mov	r5,rb3r1	; 03be   ad 19      -.
	mov	r7,#9ah		; 03c0   7f 9a      ..
	mov	r6,#1		; 03c2   7e 01      ~.
	lcall	write_byte_to_eeprom; 03c4   12 11 74   ..t
	mov	r5,rb3r2	; 03c7   ad 1a      -.
	mov	r7,#9bh		; 03c9   7f 9b      ..
	mov	r6,#1		; 03cb   7e 01      ~.
	lcall	write_byte_to_eeprom; 03cd   12 11 74   ..t
	clr	a		; 03d0   e4         d
	mov	dptr,#X00a8	; 03d1   90 00 a8   ..(
	movx	@dptr,a		; 03d4   f0         p
	mov	r5,a		; 03d5   fd         }
	mov	r7,a		; 03d6   ff         .
	mov	r6,a		; 03d7   fe         ~
	lcall	write_byte_to_eeprom; 03d8   12 11 74   ..t
	clr	a		; 03db   e4         d
	mov	model_count,a	; 03dc   f5 1b      u.
X03de:	mov	dptr,#X00a8	; 03de   90 00 a8   ..(
	movx	a,@dptr		; 03e1   e0         `
	mov	b,#19h		; 03e2   75 f0 19   up.
	mul	ab		; 03e5   a4         $
	mov	r4,#0		; 03e6   7c 00      |.
	add	a,model_count	; 03e8   25 1b      %.
	mov	r7,a		; 03ea   ff         .
	mov	a,r4		; 03eb   ec         l
	addc	a,b		; 03ec   35 f0      5p
	mov	r6,a		; 03ee   fe         ~
	lcall	read_byte_from_eeprom; 03ef   12 11 93   ...
	mov	a,#64h		; 03f2   74 64      td
	add	a,model_count	; 03f4   25 1b      %.
	mov	dpl,a		; 03f6   f5 82      u.
	clr	a		; 03f8   e4         d
	addc	a,#0		; 03f9   34 00      4.
	mov	dph,a		; 03fb   f5 83      u.
	mov	a,r7		; 03fd   ef         o
	movx	@dptr,a		; 03fe   f0         p
	inc	model_count	; 03ff   05 1b      ..
	mov	a,model_count	; 0401   e5 1b      e.
	clr	c		; 0403   c3         C
	subb	a,#5		; 0404   94 05      ..
	jc	X03de		; 0406   40 d6      @V
	clr	a		; 0408   e4         d
	mov	model_count,a	; 0409   f5 1b      u.
X040b:	mov	dptr,#X00a8	; 040b   90 00 a8   ..(
	movx	a,@dptr		; 040e   e0         `
	mov	b,#19h		; 040f   75 f0 19   up.
	mul	ab		; 0412   a4         $
	add	a,#5		; 0413   24 05      $.
	mov	r7,a		; 0415   ff         .
	clr	a		; 0416   e4         d
	addc	a,b		; 0417   35 f0      5p
	mov	r6,a		; 0419   fe         ~
	mov	r4,#0		; 041a   7c 00      |.
	mov	a,r7		; 041c   ef         o
	add	a,model_count	; 041d   25 1b      %.
	mov	r7,a		; 041f   ff         .
	mov	a,r4		; 0420   ec         l
	addc	a,r6		; 0421   3e         >
	mov	r6,a		; 0422   fe         ~
	lcall	read_byte_from_eeprom; 0423   12 11 93   ...
	mov	a,#50h		; 0426   74 50      tP
	add	a,model_count	; 0428   25 1b      %.
	mov	dpl,a		; 042a   f5 82      u.
	clr	a		; 042c   e4         d
	addc	a,#0		; 042d   34 00      4.
	mov	dph,a		; 042f   f5 83      u.
	mov	a,r7		; 0431   ef         o
	movx	@dptr,a		; 0432   f0         p
	inc	model_count	; 0433   05 1b      ..
	mov	a,model_count	; 0435   e5 1b      e.
	clr	c		; 0437   c3         C
	subb	a,#14h		; 0438   94 14      ..
	jc	X040b		; 043a   40 cf      @O
	ret			; 043c   22         "
;
; ************************************************************************
; RF Interrupt Handler
; ************************************************************************
rf_interrupt_handler:
	push	acc		; 043d   c0 e0      @`
	push	b		; 043f   c0 f0      @p
	push	dph		; 0441   c0 83      @.
	push	dpl		; 0443   c0 82      @.
	push	psw		; 0445   c0 d0      @P
	mov	psw,#0		; 0447   75 d0 00   uP.
	push	rb0r0		; 044a   c0 00      @.
	push	rb0r1		; 044c   c0 01      @.
	push	rb0r2		; 044e   c0 02      @.
	push	rb0r3		; 0450   c0 03      @.
	push	rb0r4		; 0452   c0 04      @.
	push	rb0r5		; 0454   c0 05      @.
	push	rb0r6		; 0456   c0 06      @.
	push	rb0r7		; 0458   c0 07      @.
	lcall	rf_get_and_clear_interrupts; 045a   12 13 05   ...
	mov	a,r7		; 045d   ef         o
	add	a,#0f0h		; 045e   24 f0      $p
	jnz	X0465		; 0460   70 03      p.
	ljmp	X051e		; 0462   02 05 1e   ...	; Flush if MAX_RT
;
X0465:	add	a,#0f0h		; 0465   24 f0      $p
	jz	X046c		; 0467   60 03      `.
	ljmp	X0524		; 0469   02 05 24   ..$
;
X046c:	clr	PORT_TX_OFF	; 046c   c2 94      B.	; Process TX_DS
	mov	dptr,#X0013	; 046e   90 00 13   ...
	movx	a,@dptr		; 0471   e0         `
	inc	a		; 0472   04         .
	movx	@dptr,a		; 0473   f0         p
	movx	a,@dptr		; 0474   e0         `
	clr	c		; 0475   c3         C
	subb	a,#2		; 0476   94 02      ..
	jnc	X0498		; 0478   50 1e      P.
	mov	r3,#1		; 047a   7b 01      {.	; X0013 is more than 2
	mov	r2,#0		; 047c   7a 00      z.
	mov	r1,#41h		; 047e   79 41      yA
	mov	r5,#0ah		; 0480   7d 0a      }.
	lcall	rf_write_tx_payload; 0482   12 14 19   ...
	setb	PORT_TX_OFF	; 0485   d2 94      R.
	mov	rb1r6,#14h	; 0487   75 0e 14   u..
	setb	RFCON_rfce	; 048a   d2 e8      Rh
X048c:	mov	r7,rb1r6	; 048c   af 0e      /.
	dec	rb1r6		; 048e   15 0e      ..
	mov	a,r7		; 0490   ef         o
	jnz	X048c		; 0491   70 f9      py
	clr	RFCON_rfce	; 0493   c2 e8      Bh
	ljmp	X0521		; 0495   02 05 21   ..!
;
X0498:	mov	dptr,#X0013	; 0498   90 00 13   ...
	movx	a,@dptr		; 049b   e0         `
	xrl	a,#2		; 049c   64 02      d.
	jnz	X04e7		; 049e   70 47      pG
	mov	r3,a		; 04a0   fb         {	; X0013 is 2
	mov	r2,#0		; 04a1   7a 00      z.
	mov	r1,#22h		; 04a3   79 22      y"
	mov	r7,#6		; 04a5   7f 06      ..
	lcall	rf_get_or_set_address; 04a7   12 0e 1b   ...
	clr	a		; 04aa   e4         d
	mov	r7,a		; 04ab   ff         .
	lcall	rf_set_power	; 04ac   12 11 55   ..U
	mov	r7,#51h		; 04af   7f 51      .Q	; Channel 51h has a special meaning: used for Binding with fixed address 12:23:23:45:78
	lcall	spi_set_rf_channel; 04b1   12 12 4d   ..M
	mov	a,28h		; 04b4   e5 28      e(
	mov	b,#0ah		; 04b6   75 f0 0a   up.
	mul	ab		; 04b9   a4         $
	add	a,#15h		; 04ba   24 15      $.	; bind_data offset
	mov	r1,a		; 04bc   f9         y
	mov	a,#0		; 04bd   74 00      t.
	addc	a,b		; 04bf   35 f0      5p
	mov	r2,a		; 04c1   fa         z
	mov	r3,#1		; 04c2   7b 01      {.
	mov	r5,#0ah		; 04c4   7d 0a      }.
	lcall	rf_write_tx_payload; 04c6   12 14 19   ...
	mov	a,28h		; 04c9   e5 28      e(
	clr	c		; 04cb   c3         C
	subb	a,#3		; 04cc   94 03      ..
	jnc	X04d4		; 04ce   50 04      P.
	inc	28h		; 04d0   05 28      .(
	sjmp	X04d7		; 04d2   80 03      ..
;
X04d4:	mov	28h,#0		; 04d4   75 28 00   u(.
X04d7:	mov	rb1r6,#14h	; 04d7   75 0e 14   u..
	setb	RFCON_rfce	; 04da   d2 e8      Rh
X04dc:	mov	r7,rb1r6	; 04dc   af 0e      /.
	dec	rb1r6		; 04de   15 0e      ..
	mov	a,r7		; 04e0   ef         o
	jnz	X04dc		; 04e1   70 f9      py
	clr	RFCON_rfce	; 04e3   c2 e8      Bh
	sjmp	X0521		; 04e5   80 3a      .:
;
X04e7:	mov	dptr,#X0013	; 04e7   90 00 13   ...
	movx	a,@dptr		; 04ea   e0         `
	xrl	a,#3		; 04eb   64 03      d.
	jnz	X0521		; 04ed   70 32      p2
	mov	r7,#2		; 04ef   7f 02      ..	; X0013 is 3
	lcall	rf_set_power	; 04f1   12 11 55   ..U
	mov	r3,#1		; 04f4   7b 01      {.
	mov	r2,#0		; 04f6   7a 00      z.
	mov	r1,#64h		; 04f8   79 64      yd
	mov	r7,#6		; 04fa   7f 06      ..
	lcall	rf_get_or_set_address; 04fc   12 0e 1b   ...
	mov	dptr,#X0012	; 04ff   90 00 12   ...
	movx	a,@dptr		; 0502   e0         `
	inc	a		; 0503   04         .
	movx	@dptr,a		; 0504   f0         p
	movx	a,@dptr		; 0505   e0         `
	mov	b,#14h		; 0506   75 f0 14   up.
	div	ab		; 0509   84         .
	mov	a,b		; 050a   e5 f0      ep
	movx	@dptr,a		; 050c   f0         p
	movx	a,@dptr		; 050d   e0         `
	add	a,#50h		; 050e   24 50      $P
	mov	dpl,a		; 0510   f5 82      u.
	clr	a		; 0512   e4         d
	addc	a,#0		; 0513   34 00      4.
	mov	dph,a		; 0515   f5 83      u.
	movx	a,@dptr		; 0517   e0         `
	mov	r7,a		; 0518   ff         .
	lcall	spi_set_rf_channel; 0519   12 12 4d   ..M
	sjmp	X0521		; 051c   80 03      ..
;
X051e:	lcall	rf_flush_tx	; 051e   12 13 f4   ..t
X0521:	mov	27h,#0		; 0521   75 27 00   u'.
X0524:	pop	rb0r7		; 0524   d0 07      P.
	pop	rb0r6		; 0526   d0 06      P.
	pop	rb0r5		; 0528   d0 05      P.
	pop	rb0r4		; 052a   d0 04      P.
	pop	rb0r3		; 052c   d0 03      P.
	pop	rb0r2		; 052e   d0 02      P.
	pop	rb0r1		; 0530   d0 01      P.
	pop	rb0r0		; 0532   d0 00      P.
	pop	psw		; 0534   d0 d0      PP
	pop	dpl		; 0536   d0 82      P.
	pop	dph		; 0538   d0 83      P.
	pop	b		; 053a   d0 f0      Pp
	pop	acc		; 053c   d0 e0      P`
	reti			; 053e   32         2
;
; ************************************************************************
; Timer0 Interrupt Handler
; ************************************************************************
timer0_handler:
	push	acc		; 053f   c0 e0      @`
	push	b		; 0541   c0 f0      @p
	push	dph		; 0543   c0 83      @.
	push	dpl		; 0545   c0 82      @.
	push	psw		; 0547   c0 d0      @P
	mov	psw,#0		; 0549   75 d0 00   uP.
	push	rb0r0		; 054c   c0 00      @.
	push	rb0r1		; 054e   c0 01      @.
	push	rb0r2		; 0550   c0 02      @.
	push	rb0r3		; 0552   c0 03      @.
	push	rb0r4		; 0554   c0 04      @.
	push	rb0r5		; 0556   c0 05      @.
	push	rb0r6		; 0558   c0 06      @.
	push	rb0r7		; 055a   c0 07      @.
	mov	th0,#0fah	; 055c   75 8c fa   u.z
	mov	tl0,#0cah	; 055f   75 8a ca   u.J
	mov	dptr,#div_5ms	; 0562   90 00 01   ...
	movx	a,@dptr		; 0565   e0         `
	inc	a		; 0566   04         .
	movx	@dptr,a		; 0567   f0         p
	movx	a,@dptr		; 0568   e0         `
	setb	c		; 0569   d3         S
	subb	a,#4		; 056a   94 04      ..
	jnc	X0571		; 056c   50 03      P.
	ljmp	X0613		; 056e   02 06 13   ...
;
X0571:	setb	p1.5		; 0571   d2 95      R.
	clr	a		; 0573   e4         d
	movx	@dptr,a		; 0574   f0         p
	mov	dptr,#X003f	; 0575   90 00 3f   ..?
	mov	a,#0ffh		; 0578   74 ff      t.
	movx	@dptr,a		; 057a   f0         p
	mov	a,f_stick_data	; 057b   e5 63      ec
	jz	X05ee		; 057d   60 6f      `o
	mov	a,2ah		; 057f   e5 2a      e*
	subb	a,#0ah		; 0581   94 0a      ..
	jnc	X05bc		; 0583   50 37      P7
	inc	2ah		; 0585   05 2a      .*
	mov	dptr,#stick_data; 0587   90 00 a0   .. 
	movx	a,@dptr		; 058a   e0         `
	mov	r6,a		; 058b   fe         ~
	inc	dptr		; 058c   a3         #
	movx	a,@dptr		; 058d   e0         `
	mov	dptr,#tx_packet	; 058e   90 00 41   ..A
	movx	@dptr,a		; 0591   f0         p
	mov	a,r6		; 0592   ee         n
	inc	dptr		; 0593   a3         #
	movx	@dptr,a		; 0594   f0         p
	mov	dptr,#stick_data+2; 0595   90 00 a2   .."
	movx	a,@dptr		; 0598   e0         `
	mov	r6,a		; 0599   fe         ~
	inc	dptr		; 059a   a3         #
	movx	a,@dptr		; 059b   e0         `
	mov	dptr,#tx_packet+2; 059c   90 00 43   ..C
	movx	@dptr,a		; 059f   f0         p
	mov	a,r6		; 05a0   ee         n
	inc	dptr		; 05a1   a3         #
	movx	@dptr,a		; 05a2   f0         p
	mov	dptr,#stick_data+4; 05a3   90 00 a4   ..$
	movx	a,@dptr		; 05a6   e0         `
	mov	r6,a		; 05a7   fe         ~
	inc	dptr		; 05a8   a3         #
	movx	a,@dptr		; 05a9   e0         `
	mov	dptr,#tx_packet+4; 05aa   90 00 45   ..E
	movx	@dptr,a		; 05ad   f0         p
	mov	a,r6		; 05ae   ee         n
	inc	dptr		; 05af   a3         #
	movx	@dptr,a		; 05b0   f0         p
	mov	dptr,#tx_packet+7; 05b1   90 00 48   ..H
	mov	a,#55h		; 05b4   74 55      tU
	movx	@dptr,a		; 05b6   f0         p
	inc	dptr		; 05b7   a3         #
	mov	a,#67h		; 05b8   74 67      tg
	sjmp	X05ea		; 05ba   80 2e      ..
;
X05bc:	mov	2ah,#0		; 05bc   75 2a 00   u*.
	mov	dptr,#fs_st_l	; 05bf   90 00 40   ..@
	movx	a,@dptr		; 05c2   e0         `
	inc	dptr		; 05c3   a3         #
	movx	@dptr,a		; 05c4   f0         p	; tx_packet
	mov	dptr,#fs_st_h	; 05c5   90 00 3e   ..>
	movx	a,@dptr		; 05c8   e0         `
	mov	dptr,#tx_packet+1; 05c9   90 00 42   ..B
	movx	@dptr,a		; 05cc   f0         p
	mov	dptr,#fs_th_l	; 05cd   90 00 3d   ..=
	movx	a,@dptr		; 05d0   e0         `
	mov	dptr,#tx_packet+2; 05d1   90 00 43   ..C
	movx	@dptr,a		; 05d4   f0         p
	mov	dptr,#fs_th_h	; 05d5   90 00 14   ...
	movx	a,@dptr		; 05d8   e0         `
	mov	dptr,#tx_packet+3; 05d9   90 00 44   ..D
	movx	@dptr,a		; 05dc   f0         p
	mov	dptr,#tx_packet+7; 05dd   90 00 48   ..H
	mov	a,#0aah		; 05e0   74 aa      t*
	movx	@dptr,a		; 05e2   f0         p
	mov	dptr,#failsafe_tx_value; 05e3   90 00 00   ...	; failsafe_tx_value is either 5ah (enabled) or 5bh (disabled)
	movx	a,@dptr		; 05e6   e0         `
	mov	dptr,#tx_packet+8; 05e7   90 00 49   ..I
X05ea:	movx	@dptr,a		; 05ea   f0         p
	mov	f_stick_data,#0	; 05eb   75 63 00   uc.
X05ee:	mov	r3,#1		; 05ee   7b 01      {.
	mov	r2,#0		; 05f0   7a 00      z.
	mov	r1,#41h		; 05f2   79 41      yA	; tx_packet   ; X0041
	mov	r5,#0ah		; 05f4   7d 0a      }.
	lcall	rf_write_tx_payload; 05f6   12 14 19   ...
	mov	rb1r0,#14h	; 05f9   75 08 14   u..
	setb	RFCON_rfce	; 05fc   d2 e8      Rh
X05fe:	mov	r7,rb1r0	; 05fe   af 08      /.
	dec	rb1r0		; 0600   15 08      ..
	mov	a,r7		; 0602   ef         o
	jnz	X05fe		; 0603   70 f9      py
	clr	RFCON_rfce	; 0605   c2 e8      Bh
	setb	PORT_TX_OFF	; 0607   d2 94      R.
	mov	27h,#1		; 0609   75 27 01   u'.
	mov	dptr,#X0013	; 060c   90 00 13   ...
	clr	a		; 060f   e4         d
	movx	@dptr,a		; 0610   f0         p
	clr	p1.5		; 0611   c2 95      B.
X0613:	pop	rb0r7		; 0613   d0 07      P.
	pop	rb0r6		; 0615   d0 06      P.
	pop	rb0r5		; 0617   d0 05      P.
	pop	rb0r4		; 0619   d0 04      P.
	pop	rb0r3		; 061b   d0 03      P.
	pop	rb0r2		; 061d   d0 02      P.
	pop	rb0r1		; 061f   d0 01      P.
	pop	rb0r0		; 0621   d0 00      P.
	pop	psw		; 0623   d0 d0      PP
	pop	dpl		; 0625   d0 82      P.
	pop	dph		; 0627   d0 83      P.
	pop	b		; 0629   d0 f0      Pp
	pop	acc		; 062b   d0 e0      P`
	reti			; 062d   32         2
;
; ************************************************************************
make_bind_packets:
	clr	a		; 062e   e4         d
	mov	r7,a		; 062f   ff         .
	mov	r6,a		; 0630   fe         ~
	mov	r5,a		; 0631   fd         }
X0632:	mov	a,#64h		; 0632   74 64      td
	add	a,r5		; 0634   2d         -
	mov	dpl,a		; 0635   f5 82      u.
	clr	a		; 0637   e4         d
	addc	a,#0		; 0638   34 00      4.
	mov	dph,a		; 063a   f5 83      u.
	movx	a,@dptr		; 063c   e0         `
	add	a,r7		; 063d   2f         /
	mov	r7,a		; 063e   ff         .
	clr	a		; 063f   e4         d
	addc	a,r6		; 0640   3e         >
	mov	r6,a		; 0641   fe         ~
	inc	r5		; 0642   0d         .
	cjne	r5,#5,X0632	; 0643   bd 05 ec   =.l
	mov	r5,rb0r7	; 0646   ad 07      -.
	mov	r1,rb0r5	; 0648   a9 05      ).
	mov	a,r6		; 064a   ee         n
	mov	r7,a		; 064b   ff         .
	mov	dptr,#bind_data	; 064c   90 00 15   ...
	mov	a,#0ffh		; 064f   74 ff      t.
	movx	@dptr,a		; 0651   f0         p
	inc	dptr		; 0652   a3         #
	mov	a,#0aah		; 0653   74 aa      t*
	movx	@dptr,a		; 0655   f0         p
	inc	dptr		; 0656   a3         #
	mov	a,#55h		; 0657   74 55      tU
	movx	@dptr,a		; 0659   f0         p
	mov	r5,#3		; 065a   7d 03      }.
X065c:	mov	a,#61h		; 065c   74 61      ta
	add	a,r5		; 065e   2d         -
	mov	dpl,a		; 065f   f5 82      u.
	clr	a		; 0661   e4         d
	addc	a,#0		; 0662   34 00      4.
	mov	dph,a		; 0664   f5 83      u.
	movx	a,@dptr		; 0666   e0         `
	mov	r6,a		; 0667   fe         ~
	mov	a,#15h		; 0668   74 15      t.	; bind_data offset
	add	a,r5		; 066a   2d         -
	mov	dpl,a		; 066b   f5 82      u.
	clr	a		; 066d   e4         d
	addc	a,#0		; 066e   34 00      4.
	mov	dph,a		; 0670   f5 83      u.
	mov	a,r6		; 0672   ee         n
	movx	@dptr,a		; 0673   f0         p
	inc	r5		; 0674   0d         .
	cjne	r5,#8,X065c	; 0675   bd 08 e4   =.d
	clr	a		; 0678   e4         d
	mov	28h,a		; 0679   f5 28      u(
	mov	r5,#1		; 067b   7d 01      }.
X067d:	mov	a,r5		; 067d   ed         m
	mov	b,#0ah		; 067e   75 f0 0a   up.
	mul	ab		; 0681   a4         $
	add	a,#15h		; 0682   24 15      $.	; bind_data offset
	mov	dpl,a		; 0684   f5 82      u.
	clr	a		; 0686   e4         d
	addc	a,#0		; 0687   34 00      4.
	mov	dph,a		; 0689   f5 83      u.
	mov	a,r1		; 068b   e9         i
	movx	@dptr,a		; 068c   f0         p
	mov	a,r5		; 068d   ed         m
	mov	b,#0ah		; 068e   75 f0 0a   up.
	mul	ab		; 0691   a4         $
	add	a,#16h		; 0692   24 16      $.
	mov	dpl,a		; 0694   f5 82      u.
	clr	a		; 0696   e4         d
	addc	a,#0		; 0697   34 00      4.
	mov	dph,a		; 0699   f5 83      u.
	mov	a,r7		; 069b   ef         o
	movx	@dptr,a		; 069c   f0         p
	mov	a,r5		; 069d   ed         m
	dec	a		; 069e   14         .
	mov	r6,a		; 069f   fe         ~
	mov	a,r5		; 06a0   ed         m
	mov	b,#0ah		; 06a1   75 f0 0a   up.
	mul	ab		; 06a4   a4         $
	add	a,#17h		; 06a5   24 17      $.
	mov	dpl,a		; 06a7   f5 82      u.
	clr	a		; 06a9   e4         d
	addc	a,#0		; 06aa   34 00      4.
	mov	dph,a		; 06ac   f5 83      u.
	mov	a,r6		; 06ae   ee         n
	movx	@dptr,a		; 06af   f0         p
	inc	r5		; 06b0   0d         .
	cjne	r5,#4,X067d	; 06b1   bd 04 c9   =.I
	clr	a		; 06b4   e4         d
	mov	r5,a		; 06b5   fd         }
X06b6:	mov	a,#50h		; 06b6   74 50      tP
	add	a,r5		; 06b8   2d         -
	mov	dpl,a		; 06b9   f5 82      u.
	clr	a		; 06bb   e4         d
	addc	a,#0		; 06bc   34 00      4.
	mov	dph,a		; 06be   f5 83      u.
	movx	a,@dptr		; 06c0   e0         `
	mov	r7,a		; 06c1   ff         .
	mov	a,#22h		; 06c2   74 22      t"
	add	a,r5		; 06c4   2d         -
	mov	dpl,a		; 06c5   f5 82      u.
	clr	a		; 06c7   e4         d
	addc	a,#0		; 06c8   34 00      4.
	mov	dph,a		; 06ca   f5 83      u.
	mov	a,r7		; 06cc   ef         o
	movx	@dptr,a		; 06cd   f0         p
	inc	r5		; 06ce   0d         .
	cjne	r5,#7,X06b6	; 06cf   bd 07 e4   =.d
	clr	a		; 06d2   e4         d
	mov	r5,a		; 06d3   fd         }
X06d4:	mov	a,#57h		; 06d4   74 57      tW
	add	a,r5		; 06d6   2d         -
	mov	dpl,a		; 06d7   f5 82      u.
	clr	a		; 06d9   e4         d
	addc	a,#0		; 06da   34 00      4.
	mov	dph,a		; 06dc   f5 83      u.
	movx	a,@dptr		; 06de   e0         `
	mov	r7,a		; 06df   ff         .
	mov	a,#2ch		; 06e0   74 2c      t,
	add	a,r5		; 06e2   2d         -
	mov	dpl,a		; 06e3   f5 82      u.
	clr	a		; 06e5   e4         d
	addc	a,#0		; 06e6   34 00      4.
	mov	dph,a		; 06e8   f5 83      u.
	mov	a,r7		; 06ea   ef         o
	movx	@dptr,a		; 06eb   f0         p
	inc	r5		; 06ec   0d         .
	cjne	r5,#7,X06d4	; 06ed   bd 07 e4   =.d
	clr	a		; 06f0   e4         d
	mov	r5,a		; 06f1   fd         }
X06f2:	mov	a,#5eh		; 06f2   74 5e      t^
	add	a,r5		; 06f4   2d         -
	mov	dpl,a		; 06f5   f5 82      u.
	clr	a		; 06f7   e4         d
	addc	a,#0		; 06f8   34 00      4.
	mov	dph,a		; 06fa   f5 83      u.
	movx	a,@dptr		; 06fc   e0         `
	mov	r7,a		; 06fd   ff         .
	mov	a,#36h		; 06fe   74 36      t6
	add	a,r5		; 0700   2d         -
	mov	dpl,a		; 0701   f5 82      u.
	clr	a		; 0703   e4         d
	addc	a,#0		; 0704   34 00      4.
	mov	dph,a		; 0706   f5 83      u.
	mov	a,r7		; 0708   ef         o
	movx	@dptr,a		; 0709   f0         p
	inc	r5		; 070a   0d         .
	cjne	r5,#6,X06f2	; 070b   bd 06 e4   =.d
	ret			; 070e   22         "
;
; ************************************************************************
; UART Interrupt Handler
; ************************************************************************
uart_handler:
	push	acc		; 070f   c0 e0      @`
	push	dph		; 0711   c0 83      @.
	push	dpl		; 0713   c0 82      @.
	push	psw		; 0715   c0 d0      @P
	mov	psw,#0		; 0717   75 d0 00   uP.
	push	rb0r7		; 071a   c0 07      @.
	jb	S0CON_ri0,uart_receive; 071c   20 98 03    ..
	ljmp	X07df		; 071f   02 07 df   .._
;
uart_receive:
	clr	S0CON_ri0	; 0722   c2 98      B.
	mov	dptr,#X0091	; 0724   90 00 91   ...
	movx	a,@dptr		; 0727   e0         `
	mov	r7,a		; 0728   ff         .
	jnz	X0738		; 0729   70 0d      p.
	mov	a,S0BUF		; 072b   e5 99      e.
	cjne	a,#0ffh,X0736	; 072d   b4 ff 06   4..	; Wait for first byte, which is FF
	mov	a,#1		; 0730   74 01      t.
	movx	@dptr,a		; 0732   f0         p
	ljmp	X07df		; 0733   02 07 df   .._
;
X0736:	sjmp	X07b1		; 0736   80 79      .y
;
X0738:	mov	a,r7		; 0738   ef         o
	cjne	a,#1,X075d	; 0739   b4 01 21   4.!
	mov	a,S0BUF		; 073c   e5 99      e.
	cjne	a,#55h,X074a	; 073e   b4 55 09   4U.
	mov	dptr,#X0091	; 0741   90 00 91   ...
	mov	a,#2		; 0744   74 02      t.
	movx	@dptr,a		; 0746   f0         p
	ljmp	X07df		; 0747   02 07 df   .._
;
X074a:	mov	a,S0BUF		; 074a   e5 99      e.
	mov	dptr,#X0091	; 074c   90 00 91   ...
	cjne	a,#0aah,X0758	; 074f   b4 aa 06   4*.
	mov	a,#8		; 0752   74 08      t.
	movx	@dptr,a		; 0754   f0         p
	ljmp	X07df		; 0755   02 07 df   .._
;
X0758:	clr	a		; 0758   e4         d
	movx	@dptr,a		; 0759   f0         p
	ljmp	X07df		; 075a   02 07 df   .._
;
X075d:	mov	a,r7		; 075d   ef         o
	cjne	a,#2,X0777	; 075e   b4 02 16   4..
	mov	a,S0BUF		; 0761   e5 99      e.
	mov	dptr,#X0091	; 0763   90 00 91   ...
	cjne	a,#0aah,X0773	; 0766   b4 aa 0a   4*.
	mov	a,#3		; 0769   74 03      t.
	movx	@dptr,a		; 076b   f0         p
	mov	dptr,#X0093	; 076c   90 00 93   ...
	clr	a		; 076f   e4         d
	movx	@dptr,a		; 0770   f0         p
	sjmp	X07df		; 0771   80 6c      .l
;
X0773:	clr	a		; 0773   e4         d
	movx	@dptr,a		; 0774   f0         p
	sjmp	X07df		; 0775   80 68      .h
;
X0777:	mov	a,r7		; 0777   ef         o
	cjne	a,#3,X079c	; 0778   b4 03 21   4.!
	mov	dptr,#uart_payload_count; 077b   90 00 93   ...
	movx	a,@dptr		; 077e   e0         `
	add	a,#9ah		; 077f   24 9a      $.	; offset X0093 in uart_buffer
	mov	dpl,a		; 0781   f5 82      u.
	clr	a		; 0783   e4         d
	addc	a,#0		; 0784   34 00      4.
	mov	dph,a		; 0786   f5 83      u.
	mov	a,S0BUF		; 0788   e5 99      e.
	movx	@dptr,a		; 078a   f0         p
	mov	dptr,#uart_payload_count; 078b   90 00 93   ...
	movx	a,@dptr		; 078e   e0         `
	inc	a		; 078f   04         .
	movx	@dptr,a		; 0790   f0         p
	movx	a,@dptr		; 0791   e0         `
	xrl	a,#0ch		; 0792   64 0c      d.	; 12 bytes read
	jnz	X07df		; 0794   70 49      pI
	movx	@dptr,a		; 0796   f0         p
	mov	f_servo_data,#1	; 0797   75 5f 01   u_.
	sjmp	X07db		; 079a   80 3f      .?
;
X079c:	mov	dptr,#X0091	; 079c   90 00 91   ...
	movx	a,@dptr		; 079f   e0         `
	mov	r7,a		; 07a0   ff         .
	cjne	a,#8,X07b8	; 07a1   b4 08 14   4..
	mov	a,S0BUF		; 07a4   e5 99      e.
	cjne	a,#55h,X07b1	; 07a6   b4 55 08   4U.
	mov	a,#9		; 07a9   74 09      t.
	movx	@dptr,a		; 07ab   f0         p
	inc	dptr		; 07ac   a3         #
	clr	a		; 07ad   e4         d
	movx	@dptr,a		; 07ae   f0         p
	sjmp	X07df		; 07af   80 2e      ..
;
X07b1:	mov	dptr,#X0091	; 07b1   90 00 91   ...
	clr	a		; 07b4   e4         d
	movx	@dptr,a		; 07b5   f0         p
	sjmp	X07df		; 07b6   80 27      .'
;
X07b8:	mov	a,r7		; 07b8   ef         o
	cjne	a,#9,X07df	; 07b9   b4 09 23   4.#
	mov	dptr,#X0092	; 07bc   90 00 92   ...
	movx	a,@dptr		; 07bf   e0         `
	add	a,#94h		; 07c0   24 94      $.
	mov	dpl,a		; 07c2   f5 82      u.
	clr	a		; 07c4   e4         d
	addc	a,#0		; 07c5   34 00      4.
	mov	dph,a		; 07c7   f5 83      u.
	mov	a,S0BUF		; 07c9   e5 99      e.
	movx	@dptr,a		; 07cb   f0         p
	mov	dptr,#X0092	; 07cc   90 00 92   ...
	movx	a,@dptr		; 07cf   e0         `
	inc	a		; 07d0   04         .
	movx	@dptr,a		; 07d1   f0         p
	movx	a,@dptr		; 07d2   e0         `
	cjne	a,#0ch,X07df	; 07d3   b4 0c 09   4..
	clr	a		; 07d6   e4         d
	movx	@dptr,a		; 07d7   f0         p
	mov	f_model_no,#1	; 07d8   75 5e 01   u^.
X07db:	mov	dptr,#X0091	; 07db   90 00 91   ...
	movx	@dptr,a		; 07de   f0         p
X07df:	jnb	S0CON_ti0,X07e4	; 07df   30 99 02   0..
	clr	S0CON_ti0	; 07e2   c2 99      B.
X07e4:	pop	rb0r7		; 07e4   d0 07      P.
	pop	psw		; 07e6   d0 d0      PP
	pop	dpl		; 07e8   d0 82      P.
	pop	dph		; 07ea   d0 83      P.
	pop	acc		; 07ec   d0 e0      P`
	reti			; 07ee   32         2
;
X07ef:	cjne	r3,#1,X07f8	; 07ef   bb 01 06   ;..
	mov	dpl,r1		; 07f2   89 82      ..
	mov	dph,r2		; 07f4   8a 83      ..
	movx	a,@dptr		; 07f6   e0         `
	ret			; 07f7   22         "
;
X07f8:	jnc	X07fc		; 07f8   50 02      P.
	mov	a,@r1		; 07fa   e7         g
	ret			; 07fb   22         "
;
X07fc:	cjne	r3,#0feh,X0801	; 07fc   bb fe 02   ;~.
	movx	a,@r1		; 07ff   e3         c
	ret			; 0800   22         "
;
X0801:	mov	dpl,r1		; 0801   89 82      ..
	mov	dph,r2		; 0803   8a 83      ..
	clr	a		; 0805   e4         d
	movc	a,@a+dptr	; 0806   93         .
	ret			; 0807   22         "
;
; ***************************************************************************
; get_indirect_dptr_plus_r1_r2
; r3: flag; 0 = return @dptr+r1, 1 = return @dptr+r2:r1
; ***************************************************************************
get_indirect_dptr_plus_r1_r2:
	cjne	r3,#1,X0817	; 0808   bb 01 0c   ;..
	mov	a,dpl		; 080b   e5 82      e.
	add	a,r1		; 080d   29         )
	mov	dpl,a		; 080e   f5 82      u.
	mov	a,dph		; 0810   e5 83      e.
	addc	a,r2		; 0812   3a         :
	mov	dph,a		; 0813   f5 83      u.
	movx	a,@dptr		; 0815   e0         `
	ret			; 0816   22         "
;
X0817:	jnc	X081f		; 0817   50 06      P.
	mov	a,r1		; 0819   e9         i
	add	a,dpl		; 081a   25 82      %.
	mov	r0,a		; 081c   f8         x
	mov	a,@r0		; 081d   e6         f
	ret			; 081e   22         "
;
X081f:	cjne	r3,#0feh,X0828	; 081f   bb fe 06   ;~.
	mov	a,r1		; 0822   e9         i
	add	a,dpl		; 0823   25 82      %.
	mov	r0,a		; 0825   f8         x
	movx	a,@r0		; 0826   e2         b
	ret			; 0827   22         "
;
X0828:	mov	a,dpl		; 0828   e5 82      e.
	add	a,r1		; 082a   29         )
	mov	dpl,a		; 082b   f5 82      u.
	mov	a,dph		; 082d   e5 83      e.
	addc	a,r2		; 082f   3a         :
	mov	dph,a		; 0830   f5 83      u.
	clr	a		; 0832   e4         d
	movc	a,@a+dptr	; 0833   93         .
	ret			; 0834   22         "
;
; ***************************************************************************
; set_indirect_r1_r2
; r3: flag; 0 = store at @r1, 1 = store at @r2:r1
; ***************************************************************************
set_indirect_r1_r2:
	cjne	r3,#1,X083e	; 0835   bb 01 06   ;..
	mov	dpl,r1		; 0838   89 82      ..
	mov	dph,r2		; 083a   8a 83      ..
	movx	@dptr,a		; 083c   f0         p
	ret			; 083d   22         "
;
X083e:	jnc	X0842		; 083e   50 02      P.
	mov	@r1,a		; 0840   f7         w
	ret			; 0841   22         "
;
X0842:	cjne	r3,#0feh,X0846	; 0842   bb fe 01   ;~.
	movx	@r1,a		; 0845   f3         s
X0846:	ret			; 0846   22         "
;
; ***************************************************************************
mul_16:	mov	a,r7		; 0847   ef         o	; used in servo data packing?!
	mov	b,r5		; 0848   8d f0      .p
	mul	ab		; 084a   a4         $
	mov	r0,b		; 084b   a8 f0      (p
	xch	a,r7		; 084d   cf         O
	mov	b,r4		; 084e   8c f0      .p
	mul	ab		; 0850   a4         $
	add	a,r0		; 0851   28         (
	xch	a,r6		; 0852   ce         N
	mov	b,r5		; 0853   8d f0      .p
	mul	ab		; 0855   a4         $
	add	a,r6		; 0856   2e         .
	mov	r6,a		; 0857   fe         ~
	ret			; 0858   22         "
;
; ***************************************************************************
div_16:	cjne	r4,#0,X0867	; 0859   bc 00 0b   <..
	cjne	r6,#0,X0888	; 085c   be 00 29   >.)
	mov	a,r7		; 085f   ef         o
	mov	b,r5		; 0860   8d f0      .p
	div	ab		; 0862   84         .
	mov	r7,a		; 0863   ff         .
	mov	r5,b		; 0864   ad f0      -p
	ret			; 0866   22         "
;
X0867:	clr	a		; 0867   e4         d
	xch	a,r4		; 0868   cc         L
	mov	r0,a		; 0869   f8         x
	mov	b,#8		; 086a   75 f0 08   up.
X086d:	mov	a,r7		; 086d   ef         o
	add	a,r7		; 086e   2f         /
	mov	r7,a		; 086f   ff         .
	mov	a,r6		; 0870   ee         n
	rlc	a		; 0871   33         3
	mov	r6,a		; 0872   fe         ~
	mov	a,r4		; 0873   ec         l
	rlc	a		; 0874   33         3
	mov	r4,a		; 0875   fc         |
	mov	a,r6		; 0876   ee         n
	subb	a,r5		; 0877   9d         .
	mov	a,r4		; 0878   ec         l
	subb	a,r0		; 0879   98         .
	jc	X0881		; 087a   40 05      @.
	mov	r4,a		; 087c   fc         |
	mov	a,r6		; 087d   ee         n
	subb	a,r5		; 087e   9d         .
	mov	r6,a		; 087f   fe         ~
	inc	r7		; 0880   0f         .
X0881:	djnz	b,X086d		; 0881   d5 f0 e9   Upi
	clr	a		; 0884   e4         d
	xch	a,r6		; 0885   ce         N
	mov	r5,a		; 0886   fd         }
	ret			; 0887   22         "
;
X0888:	mov	a,r5		; 0888   ed         m
	mov	r0,a		; 0889   f8         x
	mov	b,a		; 088a   f5 f0      up
	mov	a,r6		; 088c   ee         n
	div	ab		; 088d   84         .
	jb	ov,X08ad	; 088e   20 d2 1c    R.
	mov	r6,a		; 0891   fe         ~
	mov	r5,b		; 0892   ad f0      -p
	mov	b,#8		; 0894   75 f0 08   up.
X0897:	mov	a,r7		; 0897   ef         o
	add	a,r7		; 0898   2f         /
	mov	r7,a		; 0899   ff         .
	mov	a,r5		; 089a   ed         m
	rlc	a		; 089b   33         3
	mov	r5,a		; 089c   fd         }
	jc	X08a6		; 089d   40 07      @.
	subb	a,r0		; 089f   98         .
	jnc	X08a8		; 08a0   50 06      P.
	djnz	b,X0897		; 08a2   d5 f0 f2   Upr
	ret			; 08a5   22         "
;
X08a6:	clr	c		; 08a6   c3         C
	subb	a,r0		; 08a7   98         .
X08a8:	mov	r5,a		; 08a8   fd         }
	inc	r7		; 08a9   0f         .
	djnz	b,X0897		; 08aa   d5 f0 ea   Upj
X08ad:	ret			; 08ad   22         "
;
; ***************************************************************************
ic2_write_address:
	lcall	i2c_start	; 08ae   12 0f cf   ..O
	lcall	i2c_write_byte	; 08b1   12 08 b6   ..6
	mov	r7,rb0r5	; 08b4   af 05      /.
; ***************************************************************************
i2c_write_byte:
	clr	a		; 08b6   e4         d
	mov	r6,a		; 08b7   fe         ~
X08b8:	mov	a,r7		; 08b8   ef         o
	jnb	acc.7,X08c1	; 08b9   30 e7 05   0g.
	orl	P1DIR,#4	; 08bc   43 94 04   C..
	sjmp	X08c6		; 08bf   80 05      ..
;
X08c1:	anl	P1DIR,#0fbh	; 08c1   53 94 fb   S.{
	clr	PORT_SDA	; 08c4   c2 92      B.
X08c6:	mov	a,r7		; 08c6   ef         o
	add	a,acc		; 08c7   25 e0      %`
	mov	r7,a		; 08c9   ff         .
	nop			; 08ca   00         .
	nop			; 08cb   00         .
	nop			; 08cc   00         .
	nop			; 08cd   00         .
	nop			; 08ce   00         .
	nop			; 08cf   00         .
	nop			; 08d0   00         .
	nop			; 08d1   00         .
	nop			; 08d2   00         .
	nop			; 08d3   00         .
	nop			; 08d4   00         .
	nop			; 08d5   00         .
	nop			; 08d6   00         .
	nop			; 08d7   00         .
	nop			; 08d8   00         .
	setb	PORT_SCL	; 08d9   d2 90      R.
	nop			; 08db   00         .
	nop			; 08dc   00         .
	nop			; 08dd   00         .
	nop			; 08de   00         .
	nop			; 08df   00         .
	nop			; 08e0   00         .
	nop			; 08e1   00         .
	nop			; 08e2   00         .
	nop			; 08e3   00         .
	nop			; 08e4   00         .
	nop			; 08e5   00         .
	nop			; 08e6   00         .
	nop			; 08e7   00         .
	nop			; 08e8   00         .
	nop			; 08e9   00         .
	clr	PORT_SCL	; 08ea   c2 90      B.
	inc	r6		; 08ec   0e         .
	cjne	r6,#8,X08b8	; 08ed   be 08 c8   >.H
	nop			; 08f0   00         .
	nop			; 08f1   00         .
	nop			; 08f2   00         .
	nop			; 08f3   00         .
	nop			; 08f4   00         .
	nop			; 08f5   00         .
	nop			; 08f6   00         .
	nop			; 08f7   00         .
	nop			; 08f8   00         .
	nop			; 08f9   00         .
	nop			; 08fa   00         .
	nop			; 08fb   00         .
	nop			; 08fc   00         .
	nop			; 08fd   00         .
	nop			; 08fe   00         .
	orl	P1DIR,#4	; 08ff   43 94 04   C..
	nop			; 0902   00         .
	nop			; 0903   00         .
	nop			; 0904   00         .
	nop			; 0905   00         .
	nop			; 0906   00         .
	nop			; 0907   00         .
	nop			; 0908   00         .
	nop			; 0909   00         .
	nop			; 090a   00         .
	nop			; 090b   00         .
	nop			; 090c   00         .
	nop			; 090d   00         .
	nop			; 090e   00         .
	nop			; 090f   00         .
	nop			; 0910   00         .
	setb	PORT_SCL	; 0911   d2 90      R.
	nop			; 0913   00         .
	nop			; 0914   00         .
	nop			; 0915   00         .
	nop			; 0916   00         .
	nop			; 0917   00         .
	nop			; 0918   00         .
	nop			; 0919   00         .
	nop			; 091a   00         .
	nop			; 091b   00         .
	nop			; 091c   00         .
	nop			; 091d   00         .
	nop			; 091e   00         .
	nop			; 091f   00         .
	nop			; 0920   00         .
	nop			; 0921   00         .
	jnb	PORT_SDA,X0939	; 0922   30 92 14   0..
	clr	PORT_SCL	; 0925   c2 90      B.
	nop			; 0927   00         .
	nop			; 0928   00         .
	nop			; 0929   00         .
	nop			; 092a   00         .
	nop			; 092b   00         .
	nop			; 092c   00         .
	nop			; 092d   00         .
	nop			; 092e   00         .
	nop			; 092f   00         .
	nop			; 0930   00         .
	nop			; 0931   00         .
	nop			; 0932   00         .
	nop			; 0933   00         .
	nop			; 0934   00         .
	nop			; 0935   00         .
	mov	r7,#0		; 0936   7f 00      ..
	ret			; 0938   22         "
;
X0939:	clr	PORT_SCL	; 0939   c2 90      B.
	nop			; 093b   00         .
	nop			; 093c   00         .
	nop			; 093d   00         .
	nop			; 093e   00         .
	nop			; 093f   00         .
	nop			; 0940   00         .
	nop			; 0941   00         .
	nop			; 0942   00         .
	nop			; 0943   00         .
	nop			; 0944   00         .
	nop			; 0945   00         .
	nop			; 0946   00         .
	nop			; 0947   00         .
	nop			; 0948   00         .
	nop			; 0949   00         .
	mov	r7,#1		; 094a   7f 01      ..
	ret			; 094c   22         "
;
; ***************************************************************************
rf_enable_auto_acknowledge:
	mov	41h,r7		; 094d   8f 41      .A	; 094d-09de UNUSED CODE
	mov	r7,#2		; 094f   7f 02      ..
	lcall	spi_read_register; 0951   12 12 f8   ..x
	mov	42h,r7		; 0954   8f 42      .B
	mov	r7,#1		; 0956   7f 01      ..
	lcall	spi_read_register; 0958   12 12 f8   ..x
	mov	43h,r7		; 095b   8f 43      .C
	mov	a,41h		; 095d   e5 41      eA
	dec	a		; 095f   14         .
	jz	X097e		; 0960   60 1c      `.
	dec	a		; 0962   14         .
	jz	X098e		; 0963   60 29      `)
	dec	a		; 0965   14         .
	jz	X099e		; 0966   60 36      `6
	dec	a		; 0968   14         .
	jz	X09b0		; 0969   60 45      `E
	dec	a		; 096b   14         .
	jz	X09be		; 096c   60 50      `P
	add	a,#5		; 096e   24 05      $.
	jnz	X09d2		; 0970   70 60      p`
	mov	r7,42h		; 0972   af 42      /B
	mov	a,r7		; 0974   ef         o
	anl	a,#1		; 0975   54 01      T.
	mov	44h,a		; 0977   f5 44      uD
	mov	r7,43h		; 0979   af 43      /C
	mov	a,r7		; 097b   ef         o
	sjmp	X09cc		; 097c   80 4e      .N
;
X097e:	mov	r7,42h		; 097e   af 42      /B
	mov	a,r7		; 0980   ef         o
	clr	c		; 0981   c3         C
	rrc	a		; 0982   13         .
	anl	a,#1		; 0983   54 01      T.
	mov	44h,a		; 0985   f5 44      uD
	mov	r7,43h		; 0987   af 43      /C
	mov	a,r7		; 0989   ef         o
	clr	c		; 098a   c3         C
	rrc	a		; 098b   13         .
	sjmp	X09cc		; 098c   80 3e      .>
;
X098e:	mov	r7,42h		; 098e   af 42      /B
	mov	a,r7		; 0990   ef         o
	rrc	a		; 0991   13         .
	rrc	a		; 0992   13         .
	anl	a,#1		; 0993   54 01      T.
	mov	44h,a		; 0995   f5 44      uD
	mov	r7,43h		; 0997   af 43      /C
	mov	a,r7		; 0999   ef         o
	rrc	a		; 099a   13         .
	rrc	a		; 099b   13         .
	sjmp	X09cc		; 099c   80 2e      ..
;
X099e:	mov	r7,42h		; 099e   af 42      /B
	mov	a,r7		; 09a0   ef         o
	rrc	a		; 09a1   13         .
	rrc	a		; 09a2   13         .
	rrc	a		; 09a3   13         .
	anl	a,#1		; 09a4   54 01      T.
	mov	44h,a		; 09a6   f5 44      uD
	mov	r7,43h		; 09a8   af 43      /C
	mov	a,r7		; 09aa   ef         o
	rrc	a		; 09ab   13         .
	rrc	a		; 09ac   13         .
	rrc	a		; 09ad   13         .
	sjmp	X09cc		; 09ae   80 1c      ..
;
X09b0:	mov	r7,42h		; 09b0   af 42      /B
	mov	a,r7		; 09b2   ef         o
	swap	a		; 09b3   c4         D
	anl	a,#1		; 09b4   54 01      T.
	mov	44h,a		; 09b6   f5 44      uD
	mov	r7,43h		; 09b8   af 43      /C
	mov	a,r7		; 09ba   ef         o
	swap	a		; 09bb   c4         D
	sjmp	X09cc		; 09bc   80 0e      ..
;
X09be:	mov	r7,42h		; 09be   af 42      /B
	mov	a,r7		; 09c0   ef         o
	swap	a		; 09c1   c4         D
	rrc	a		; 09c2   13         .
	anl	a,#1		; 09c3   54 01      T.
	mov	44h,a		; 09c5   f5 44      uD
	mov	r7,43h		; 09c7   af 43      /C
	mov	a,r7		; 09c9   ef         o
	swap	a		; 09ca   c4         D
	rrc	a		; 09cb   13         .
X09cc:	anl	a,#1		; 09cc   54 01      T.
	mov	45h,a		; 09ce   f5 45      uE
	sjmp	X09d7		; 09d0   80 05      ..
;
X09d2:	clr	a		; 09d2   e4         d
	mov	44h,a		; 09d3   f5 44      uD
	mov	45h,a		; 09d5   f5 45      uE
X09d7:	mov	a,45h		; 09d7   e5 45      eE
	add	a,acc		; 09d9   25 e0      %`
	add	a,44h		; 09db   25 44      %D
	mov	r7,a		; 09dd   ff         .
	ret			; 09de   22         "
;
; ************************************************************************
; Reset
; ************************************************************************
reset_ram:
	mov	r0,#7fh		; 09df   78 7f      x.
	clr	a		; 09e1   e4         d
clear_ram:
	mov	@r0,a		; 09e2   f6         v
	djnz	r0,clear_ram	; 09e3   d8 fd      X}
	mov	sp,#63h		; 09e5   75 81 63   u.c
	ljmp	X0a26		; 09e8   02 0a 26   ..&
;
init_ljmp:
	ljmp	init		; 09eb   02 00 4e   ..N
;
X09ee:	clr	a		; 09ee   e4         d
	movc	a,@a+dptr	; 09ef   93         .
	inc	dptr		; 09f0   a3         #
	mov	r0,a		; 09f1   f8         x
X09f2:	clr	a		; 09f2   e4         d
	movc	a,@a+dptr	; 09f3   93         .
	inc	dptr		; 09f4   a3         #
	jc	X09fa		; 09f5   40 03      @.
	mov	@r0,a		; 09f7   f6         v
	sjmp	X09fb		; 09f8   80 01      ..
;
X09fa:	movx	@r0,a		; 09fa   f2         r
X09fb:	inc	r0		; 09fb   08         .
	djnz	r7,X09f2	; 09fc   df f4      _t
	sjmp	X0a29		; 09fe   80 29      .)
;
X0a00:	clr	a		; 0a00   e4         d
	movc	a,@a+dptr	; 0a01   93         .
	inc	dptr		; 0a02   a3         #
	mov	r0,a		; 0a03   f8         x
	anl	a,#7		; 0a04   54 07      T.
	add	a,#0ch		; 0a06   24 0c      $.
	xch	a,r0		; 0a08   c8         H
	clr	c		; 0a09   c3         C
	rlc	a		; 0a0a   33         3
	swap	a		; 0a0b   c4         D
	anl	a,#0fh		; 0a0c   54 0f      T.
	orl	a,#20h		; 0a0e   44 20      D 
	xch	a,r0		; 0a10   c8         H
	movc	a,@a+pc		; 0a11   83         .
	jc	X0a18		; 0a12   40 04      @.
	cpl	a		; 0a14   f4         t
	anl	a,@r0		; 0a15   56         V
	sjmp	X0a19		; 0a16   80 01      ..
;
X0a18:	orl	a,@r0		; 0a18   46         F
X0a19:	mov	@r0,a		; 0a19   f6         v
	djnz	r7,X0a00	; 0a1a   df e4      _d
	sjmp	X0a29		; 0a1c   80 0b      ..
;
	db	1,2,4,8,10h,20h,40h,80h			; 0a1e ..... @.	; bit masks
;
X0a26:	mov	dptr,#ram_initialization_data; 0a26   90 0d 0c   ...
X0a29:	clr	a		; 0a29   e4         d
	mov	r6,#1		; 0a2a   7e 01      ~.
	movc	a,@a+dptr	; 0a2c   93         .
	jz	init_ljmp	; 0a2d   60 bc      `<
	inc	dptr		; 0a2f   a3         #
	mov	r7,a		; 0a30   ff         .
	anl	a,#3fh		; 0a31   54 3f      T?
	jnb	acc.5,X0a3f	; 0a33   30 e5 09   0e.
	anl	a,#1fh		; 0a36   54 1f      T.
	mov	r6,a		; 0a38   fe         ~
	clr	a		; 0a39   e4         d
	movc	a,@a+dptr	; 0a3a   93         .
	inc	dptr		; 0a3b   a3         #
	jz	X0a3f		; 0a3c   60 01      `.
	inc	r6		; 0a3e   0e         .
X0a3f:	xch	a,r7		; 0a3f   cf         O
	anl	a,#0c0h		; 0a40   54 c0      T@
	add	a,acc		; 0a42   25 e0      %`
	jz	X09ee		; 0a44   60 a8      `(
	jc	X0a00		; 0a46   40 b8      @8
	clr	a		; 0a48   e4         d
	movc	a,@a+dptr	; 0a49   93         .
	inc	dptr		; 0a4a   a3         #
	mov	r2,a		; 0a4b   fa         z
	clr	a		; 0a4c   e4         d
	movc	a,@a+dptr	; 0a4d   93         .
	inc	dptr		; 0a4e   a3         #
	mov	r0,a		; 0a4f   f8         x
X0a50:	clr	a		; 0a50   e4         d
	movc	a,@a+dptr	; 0a51   93         .
	inc	dptr		; 0a52   a3         #
	xch	a,r0		; 0a53   c8         H
	xch	a,dpl		; 0a54   c5 82      E.
	xch	a,r0		; 0a56   c8         H
	xch	a,r2		; 0a57   ca         J
	xch	a,dph		; 0a58   c5 83      E.
	xch	a,r2		; 0a5a   ca         J
	movx	@dptr,a		; 0a5b   f0         p
	inc	dptr		; 0a5c   a3         #
	xch	a,r0		; 0a5d   c8         H
	xch	a,dpl		; 0a5e   c5 82      E.
	xch	a,r0		; 0a60   c8         H
	xch	a,r2		; 0a61   ca         J
	xch	a,dph		; 0a62   c5 83      E.
	xch	a,r2		; 0a64   ca         J
	djnz	r7,X0a50	; 0a65   df e9      _i
	djnz	r6,X0a50	; 0a67   de e7      ^g
	sjmp	X0a29		; 0a69   80 be      .>
;
X0a6b:	mov	3bh,r7		; 0a6b   8f 3b      .;	; 0a6b-0aa3 UNUSED CODE
	mov	3ch,r3		; 0a6d   8b 3c      .<
	mov	3dh,r2		; 0a6f   8a 3d      .=
	mov	3eh,r1		; 0a71   89 3e      .>
	mov	a,3bh		; 0a73   e5 3b      e;
	dec	a		; 0a75   14         .
	jz	X0a84		; 0a76   60 0c      `.
	add	a,#0fbh		; 0a78   24 fb      ${
	jz	X0a84		; 0a7a   60 08      `.
	add	a,#0feh		; 0a7c   24 fe      $~
	jz	X0a94		; 0a7e   60 14      `.
	add	a,#8		; 0a80   24 08      $.
	jnz	X0aaf		; 0a82   70 2b      p+
X0a84:	lcall	rf_get_number_of_address_bytes; 0a84   12 13 9a   ...
	mov	3fh,r7		; 0a87   8f 3f      .?
	mov	40h,r7		; 0a89   8f 40      .@
	clr	RFCON_rfcsn	; 0a8b   c2 e9      Bi
	mov	a,3bh		; 0a8d   e5 3b      e;
	add	a,#0ah		; 0a8f   24 0a      $.
	mov	r7,a		; 0a91   ff         .
	sjmp	X0aaa		; 0a92   80 16      ..
;
X0a94:	lcall	rf_get_data_pipe_ready; 0a94   12 13 d6   ..V
	mov	3bh,r7		; 0a97   8f 3b      .;
	mov	a,r7		; 0a99   ef         o
	clr	c		; 0a9a   c3         C
	subb	a,#7		; 0a9b   94 07      ..
	jnc	X0aaf		; 0a9d   50 10      P.
	lcall	rf_get_rx_payload_width; 0a9f   12 14 3a   ..:
	mov	3fh,r7		; 0aa2   8f 3f      .?
	mov	40h,r7		; 0aa4   8f 40      .@
	clr	RFCON_rfcsn	; 0aa6   c2 e9      Bi
	mov	r7,#61h		; 0aa8   7f 61      .a
X0aaa:	lcall	spi_write	; 0aaa   12 14 08   ...
	sjmp	X0ab4		; 0aad   80 05      ..
;
X0aaf:	clr	a		; 0aaf   e4         d	; 0aaf-0ab3 UNUSED CODE
	mov	40h,a		; 0ab0   f5 40      u@
	mov	3fh,a		; 0ab2   f5 3f      u?
X0ab4:	mov	r7,3fh		; 0ab4   af 3f      /?
	dec	3fh		; 0ab6   15 3f      .?
	mov	a,r7		; 0ab8   ef         o
	jz	X0ad4		; 0ab9   60 19      `.
	clr	a		; 0abb   e4         d
	mov	r7,a		; 0abc   ff         .
	lcall	spi_write	; 0abd   12 14 08   ...
	mov	r3,3ch		; 0ac0   ab 3c      +<
	inc	3eh		; 0ac2   05 3e      .>
	mov	a,3eh		; 0ac4   e5 3e      e>
	mov	r2,3dh		; 0ac6   aa 3d      *=
	jnz	X0acc		; 0ac8   70 02      p.
	inc	3dh		; 0aca   05 3d      .=
X0acc:	dec	a		; 0acc   14         .
	mov	r1,a		; 0acd   f9         y
	mov	a,r7		; 0ace   ef         o
	lcall	set_indirect_r1_r2; 0acf   12 08 35   ..5
	sjmp	X0ab4		; 0ad2   80 e0      .`
;
X0ad4:	setb	RFCON_rfcsn	; 0ad4   d2 e9      Ri
	mov	a,3bh		; 0ad6   e5 3b      e;
	mov	r6,a		; 0ad8   fe         ~
	mov	a,40h		; 0ad9   e5 40      e@
	mov	r7,a		; 0adb   ff         .
	ret			; 0adc   22         "
;
; ***************************************************************************
; rf_modify_config_bit
;
; r7: bit number in the CONFIG reg.  r5: new bit value
; ***************************************************************************
rf_modify_config_bit:
	mov	rb3r1,r7	; 0add   8f 19      ..
	mov	rb3r2,r5	; 0adf   8d 1a      ..
	clr	a		; 0ae1   e4         d
	mov	r7,a		; 0ae2   ff         .
	lcall	spi_read_register; 0ae3   12 12 f8   ..x
	mov	model_count,r7	; 0ae6   8f 1b      ..
	mov	a,rb3r1		; 0ae8   e5 19      e.
	add	a,#0fbh		; 0aea   24 fb      ${
	jz	X0b0d		; 0aec   60 1f      `.
	dec	a		; 0aee   14         .
	jz	X0b26		; 0aef   60 35      `5
	add	a,#2		; 0af1   24 02      $.
	jnz	X0b41		; 0af3   70 4c      pL
	mov	a,rb3r2		; 0af5   e5 1a      e.
	jz	X0afd		; 0af7   60 04      `.
	mov	r7,#0		; 0af9   7f 00      ..
	sjmp	X0aff		; 0afb   80 02      ..
;
X0afd:	mov	r7,#1		; 0afd   7f 01      ..
X0aff:	mov	a,r7		; 0aff   ef         o
	anl	a,#1		; 0b00   54 01      T.
	swap	a		; 0b02   c4         D
	anl	a,#0f0h		; 0b03   54 f0      Tp
	mov	r7,a		; 0b05   ff         .
	mov	r6,model_count	; 0b06   ae 1b      ..
	mov	a,r6		; 0b08   ee         n
	anl	a,#0efh		; 0b09   54 ef      To
	sjmp	X0b3e		; 0b0b   80 31      .1
;
X0b0d:	mov	a,rb3r2		; 0b0d   e5 1a      e.
	jz	X0b15		; 0b0f   60 04      `.
	mov	r7,#0		; 0b11   7f 00      ..
	sjmp	X0b17		; 0b13   80 02      ..
;
X0b15:	mov	r7,#1		; 0b15   7f 01      ..
X0b17:	mov	a,r7		; 0b17   ef         o
	anl	a,#1		; 0b18   54 01      T.
	swap	a		; 0b1a   c4         D
	rlc	a		; 0b1b   33         3
	anl	a,#0e0h		; 0b1c   54 e0      T`
	mov	r7,a		; 0b1e   ff         .
	mov	r6,model_count	; 0b1f   ae 1b      ..
	mov	a,r6		; 0b21   ee         n
	anl	a,#0dfh		; 0b22   54 df      T_
	sjmp	X0b3e		; 0b24   80 18      ..
;
X0b26:	mov	a,rb3r2		; 0b26   e5 1a      e.
	jz	X0b2e		; 0b28   60 04      `.
	mov	r7,#0		; 0b2a   7f 00      ..
	sjmp	X0b30		; 0b2c   80 02      ..
;
X0b2e:	mov	r7,#1		; 0b2e   7f 01      ..
X0b30:	mov	a,r7		; 0b30   ef         o
	anl	a,#1		; 0b31   54 01      T.
	swap	a		; 0b33   c4         D
	rlc	a		; 0b34   33         3
	rlc	a		; 0b35   33         3
	anl	a,#0c0h		; 0b36   54 c0      T@
	mov	r7,a		; 0b38   ff         .
	mov	r6,model_count	; 0b39   ae 1b      ..
	mov	a,r6		; 0b3b   ee         n
	anl	a,#0bfh		; 0b3c   54 bf      T?
X0b3e:	orl	a,r7		; 0b3e   4f         O
	mov	model_count,a	; 0b3f   f5 1b      u.
X0b41:	mov	r5,model_count	; 0b41   ad 1b      -.
	clr	a		; 0b43   e4         d
	mov	r7,a		; 0b44   ff         .
	ljmp	spi_write_register; 0b45   02 11 c7   ..G
;
; ***************************************************************************
i2c_read_byte:
	clr	a		; 0b48   e4         d
	mov	r7,a		; 0b49   ff         .
	orl	P1DIR,#4	; 0b4a   43 94 04   C..
	mov	r6,a		; 0b4d   fe         ~
X0b4e:	nop			; 0b4e   00         .
	nop			; 0b4f   00         .
	nop			; 0b50   00         .
	nop			; 0b51   00         .
	nop			; 0b52   00         .
	nop			; 0b53   00         .
	nop			; 0b54   00         .
	nop			; 0b55   00         .
	nop			; 0b56   00         .
	nop			; 0b57   00         .
	nop			; 0b58   00         .
	nop			; 0b59   00         .
	nop			; 0b5a   00         .
	nop			; 0b5b   00         .
	nop			; 0b5c   00         .
	clr	PORT_SCL	; 0b5d   c2 90      B.
	nop			; 0b5f   00         .
	nop			; 0b60   00         .
	nop			; 0b61   00         .
	nop			; 0b62   00         .
	nop			; 0b63   00         .
	nop			; 0b64   00         .
	nop			; 0b65   00         .
	nop			; 0b66   00         .
	nop			; 0b67   00         .
	nop			; 0b68   00         .
	nop			; 0b69   00         .
	nop			; 0b6a   00         .
	nop			; 0b6b   00         .
	nop			; 0b6c   00         .
	nop			; 0b6d   00         .
	setb	PORT_SCL	; 0b6e   d2 90      R.
	nop			; 0b70   00         .
	nop			; 0b71   00         .
	nop			; 0b72   00         .
	nop			; 0b73   00         .
	nop			; 0b74   00         .
	nop			; 0b75   00         .
	nop			; 0b76   00         .
	nop			; 0b77   00         .
	nop			; 0b78   00         .
	nop			; 0b79   00         .
	nop			; 0b7a   00         .
	nop			; 0b7b   00         .
	nop			; 0b7c   00         .
	nop			; 0b7d   00         .
	nop			; 0b7e   00         .
	mov	a,r7		; 0b7f   ef         o
	add	a,acc		; 0b80   25 e0      %`
	mov	r7,a		; 0b82   ff         .
	jnb	PORT_SDA,X0b87	; 0b83   30 92 01   0..
	inc	r7		; 0b86   0f         .
X0b87:	nop			; 0b87   00         .
	nop			; 0b88   00         .
	nop			; 0b89   00         .
	nop			; 0b8a   00         .
	nop			; 0b8b   00         .
	nop			; 0b8c   00         .
	nop			; 0b8d   00         .
	nop			; 0b8e   00         .
	nop			; 0b8f   00         .
	nop			; 0b90   00         .
	nop			; 0b91   00         .
	nop			; 0b92   00         .
	nop			; 0b93   00         .
	nop			; 0b94   00         .
	nop			; 0b95   00         .
	inc	r6		; 0b96   0e         .
	cjne	r6,#8,X0b4e	; 0b97   be 08 b4   >.4
	clr	PORT_SCL	; 0b9a   c2 90      B.
	nop			; 0b9c   00         .
	nop			; 0b9d   00         .
	nop			; 0b9e   00         .
	nop			; 0b9f   00         .
	nop			; 0ba0   00         .
	nop			; 0ba1   00         .
	nop			; 0ba2   00         .
	nop			; 0ba3   00         .
	nop			; 0ba4   00         .
	nop			; 0ba5   00         .
	nop			; 0ba6   00         .
	nop			; 0ba7   00         .
	nop			; 0ba8   00         .
	nop			; 0ba9   00         .
	nop			; 0baa   00         .
	ret			; 0bab   22         "
;
; ************************************************************************
read_current_model_bind_data_from_eeprom:
	clr	a		; 0bac   e4         d
	mov	rb3r1,a		; 0bad   f5 19      u.
X0baf:	mov	dptr,#X00a8	; 0baf   90 00 a8   ..(
	movx	a,@dptr		; 0bb2   e0         `
	mov	b,#19h		; 0bb3   75 f0 19   up.
	mul	ab		; 0bb6   a4         $
	mov	r4,#0		; 0bb7   7c 00      |.
	add	a,rb3r1		; 0bb9   25 19      %.
	mov	r7,a		; 0bbb   ff         .
	mov	a,r4		; 0bbc   ec         l
	addc	a,b		; 0bbd   35 f0      5p
	mov	r6,a		; 0bbf   fe         ~
	lcall	read_byte_from_eeprom; 0bc0   12 11 93   ...
	mov	a,#64h		; 0bc3   74 64      td
	add	a,rb3r1		; 0bc5   25 19      %.
	mov	dpl,a		; 0bc7   f5 82      u.
	clr	a		; 0bc9   e4         d
	addc	a,#0		; 0bca   34 00      4.
	mov	dph,a		; 0bcc   f5 83      u.
	mov	a,r7		; 0bce   ef         o
	movx	@dptr,a		; 0bcf   f0         p
	inc	rb3r1		; 0bd0   05 19      ..
	mov	a,rb3r1		; 0bd2   e5 19      e.
	clr	c		; 0bd4   c3         C
	subb	a,#5		; 0bd5   94 05      ..
	jc	X0baf		; 0bd7   40 d6      @V
	clr	a		; 0bd9   e4         d
	mov	rb3r1,a		; 0bda   f5 19      u.
X0bdc:	mov	dptr,#X00a8	; 0bdc   90 00 a8   ..(
	movx	a,@dptr		; 0bdf   e0         `
	mov	b,#19h		; 0be0   75 f0 19   up.
	mul	ab		; 0be3   a4         $
	add	a,#5		; 0be4   24 05      $.
	mov	r7,a		; 0be6   ff         .
	clr	a		; 0be7   e4         d
	addc	a,b		; 0be8   35 f0      5p
	mov	r6,a		; 0bea   fe         ~
	mov	r4,#0		; 0beb   7c 00      |.
	mov	a,r7		; 0bed   ef         o
	add	a,rb3r1		; 0bee   25 19      %.
	mov	r7,a		; 0bf0   ff         .
	mov	a,r4		; 0bf1   ec         l
	addc	a,r6		; 0bf2   3e         >
	mov	r6,a		; 0bf3   fe         ~
	lcall	read_byte_from_eeprom; 0bf4   12 11 93   ...
	mov	a,#50h		; 0bf7   74 50      tP
	add	a,rb3r1		; 0bf9   25 19      %.
	mov	dpl,a		; 0bfb   f5 82      u.
	clr	a		; 0bfd   e4         d
	addc	a,#0		; 0bfe   34 00      4.
	mov	dph,a		; 0c00   f5 83      u.
	mov	a,r7		; 0c02   ef         o
	movx	@dptr,a		; 0c03   f0         p
	inc	rb3r1		; 0c04   05 19      ..
	mov	a,rb3r1		; 0c06   e5 19      e.
	clr	c		; 0c08   c3         C
	subb	a,#14h		; 0c09   94 14      ..
	jc	X0bdc		; 0c0b   40 cf      @O
	ljmp	save_current_model; 0c0d   02 13 6f   ..o
;
; ***************************************************************************
rf_enable_data_pipes:
	mov	rb3r1,r7	; 0c10   8f 19      ..
	mov	rb3r2,r5	; 0c12   8d 1a      ..
	mov	r7,#2		; 0c14   7f 02      ..
	lcall	spi_read_register; 0c16   12 12 f8   ..x
	mov	model_count,r7	; 0c19   8f 1b      ..
	mov	r7,#1		; 0c1b   7f 01      ..
	lcall	spi_read_register; 0c1d   12 12 f8   ..x
	mov	count,r7	; 0c20   8f 1c      ..
	mov	a,rb3r1		; 0c22   e5 19      e.
	add	a,#0fah		; 0c24   24 fa      $z
	jnc	X0c2e		; 0c26   50 06      P.
	add	a,#7		; 0c28   24 07      $.
	jz	X0c4d		; 0c2a   60 21      `!
	sjmp	X0c5c		; 0c2c   80 2e      ..
;
X0c2e:	mov	r7,rb3r1	; 0c2e   af 19      /.
	mov	a,#1		; 0c30   74 01      t.
	mov	r0,rb0r7	; 0c32   a8 07      (.
	inc	r0		; 0c34   08         .
	sjmp	X0c39		; 0c35   80 02      ..
;
X0c37:	clr	c		; 0c37   c3         C
	rlc	a		; 0c38   33         3
X0c39:	djnz	r0,X0c37	; 0c39   d8 fc      X|
	mov	r7,a		; 0c3b   ff         .
	orl	model_count,a	; 0c3c   42 1b      B.
	mov	a,rb3r2		; 0c3e   e5 1a      e.
	jz	X0c47		; 0c40   60 05      `.
	mov	a,r7		; 0c42   ef         o
	orl	count,a		; 0c43   42 1c      B.
	sjmp	X0c5c		; 0c45   80 15      ..
;
X0c47:	mov	a,r7		; 0c47   ef         o
	cpl	a		; 0c48   f4         t
	anl	count,a		; 0c49   52 1c      R.
	sjmp	X0c5c		; 0c4b   80 0f      ..
;
X0c4d:	mov	model_count,#3fh; 0c4d   75 1b 3f   u.?
	mov	a,rb3r2		; 0c50   e5 1a      e.
	jz	X0c59		; 0c52   60 05      `.
	mov	count,#3fh	; 0c54   75 1c 3f   u.?
	sjmp	X0c5c		; 0c57   80 03      ..
;
X0c59:	clr	a		; 0c59   e4         d
	mov	count,a		; 0c5a   f5 1c      u.
X0c5c:	mov	r5,model_count	; 0c5c   ad 1b      -.
	mov	r7,#2		; 0c5e   7f 02      ..
	lcall	spi_write_register; 0c60   12 11 c7   ..G
	mov	r5,count	; 0c63   ad 1c      -.
	mov	r7,#1		; 0c65   7f 01      ..
	ljmp	spi_write_register; 0c67   02 11 c7   ..G
;
; ***************************************************************************
i2c_has_write_finished:
	mov	r7,#0a0h	; 0c6a   7f a0      . 
	clr	PORT_SDA	; 0c6c   c2 92      B.
	orl	P1DIR,#4	; 0c6e   43 94 04   C..
	lcall	i2c_start	; 0c71   12 0f cf   ..O
	clr	a		; 0c74   e4         d
	mov	r6,a		; 0c75   fe         ~
X0c76:	mov	a,r7		; 0c76   ef         o
	jnb	acc.7,X0c7f	; 0c77   30 e7 05   0g.
	orl	P1DIR,#4	; 0c7a   43 94 04   C..
	sjmp	X0c84		; 0c7d   80 05      ..
;
X0c7f:	anl	P1DIR,#0fbh	; 0c7f   53 94 fb   S.{
	clr	PORT_SDA	; 0c82   c2 92      B.
X0c84:	mov	a,r7		; 0c84   ef         o
	add	a,acc		; 0c85   25 e0      %`
	mov	r7,a		; 0c87   ff         .
	setb	PORT_SCL	; 0c88   d2 90      R.
	nop			; 0c8a   00         .
	nop			; 0c8b   00         .
	nop			; 0c8c   00         .
	nop			; 0c8d   00         .
	nop			; 0c8e   00         .
	clr	PORT_SCL	; 0c8f   c2 90      B.
	nop			; 0c91   00         .
	nop			; 0c92   00         .
	nop			; 0c93   00         .
	nop			; 0c94   00         .
	nop			; 0c95   00         .
	inc	r6		; 0c96   0e         .
	cjne	r6,#8,X0c76	; 0c97   be 08 dc   >.\
	orl	P1DIR,#4	; 0c9a   43 94 04   C..
	nop			; 0c9d   00         .
	nop			; 0c9e   00         .
	nop			; 0c9f   00         .
	nop			; 0ca0   00         .
	nop			; 0ca1   00         .
	nop			; 0ca2   00         .
	nop			; 0ca3   00         .
	nop			; 0ca4   00         .
	setb	PORT_SCL	; 0ca5   d2 90      R.
	nop			; 0ca7   00         .
	nop			; 0ca8   00         .
	nop			; 0ca9   00         .
	nop			; 0caa   00         .
	nop			; 0cab   00         .
	nop			; 0cac   00         .
	nop			; 0cad   00         .
	nop			; 0cae   00         .
	jnb	PORT_SDA,X0cb7	; 0caf   30 92 05   0..
	clr	PORT_SCL	; 0cb2   c2 90      B.
	mov	r7,#0		; 0cb4   7f 00      ..
	ret			; 0cb6   22         "
;
X0cb7:	clr	PORT_SCL	; 0cb7   c2 90      B.
	mov	r7,#1		; 0cb9   7f 01      ..
	ret			; 0cbb   22         "
;
; ***************************************************************************
; r1:r2 (r3): pointer to source memory
; r6:r7: pointer to flash memory
; 32h:33h: count
; ***************************************************************************
write_bytes_to_flash:
	mov	2dh,r3		; 0cbc   8b 2d      .-	; 0cbc-0d0b UNUSED CODE
	mov	2eh,r2		; 0cbe   8a 2e      ..
	mov	2fh,r1		; 0cc0   89 2f      ./
	mov	c,IEN0_all	; 0cc2   a2 af      "/
	mov	f0,c		; 0cc4   92 d5      .U
	clr	IEN0_all	; 0cc6   c2 af      B/
	setb	FSR_wen		; 0cc8   d2 fd      R}
	mov	32h,r6		; 0cca   8e 32      .2
	mov	33h,r7		; 0ccc   8f 33      .3
X0cce:	mov	a,31h		; 0cce   e5 31      e1
	dec	31h		; 0cd0   15 31      .1
	mov	r6,30h		; 0cd2   ae 30      .0
	jnz	X0cd8		; 0cd4   70 02      p.
	dec	30h		; 0cd6   15 30      .0
X0cd8:	orl	a,r6		; 0cd8   4e         N
	jz	X0d00		; 0cd9   60 25      `%
	mov	r3,2dh		; 0cdb   ab 2d      +-
	inc	2fh		; 0cdd   05 2f      ./
	mov	a,2fh		; 0cdf   e5 2f      e/
	mov	r2,2eh		; 0ce1   aa 2e      *.
	jnz	X0ce7		; 0ce3   70 02      p.
	inc	2eh		; 0ce5   05 2e      ..
X0ce7:	dec	a		; 0ce7   14         .
	mov	r1,a		; 0ce8   f9         y
	lcall	X07ef		; 0ce9   12 07 ef   ..o
	mov	r7,a		; 0cec   ff         .
	inc	33h		; 0ced   05 33      .3
	mov	a,33h		; 0cef   e5 33      e3
	mov	r4,32h		; 0cf1   ac 32      ,2
	jnz	X0cf7		; 0cf3   70 02      p.
	inc	32h		; 0cf5   05 32      .2
X0cf7:	dec	a		; 0cf7   14         .
	mov	dpl,a		; 0cf8   f5 82      u.
	mov	dph,r4		; 0cfa   8c 83      ..
	mov	a,r7		; 0cfc   ef         o
	movx	@dptr,a		; 0cfd   f0         p
	sjmp	X0cce		; 0cfe   80 ce      .N
;
X0d00:	jnb	FSR_rdyn,X0d07	; 0d00   30 fc 04   0|.
	clr	FSR_wen		; 0d03   c2 fd      B}
	sjmp	X0d00		; 0d05   80 f9      .y
;
X0d07:	mov	c,f0		; 0d07   a2 d5      "U
	mov	IEN0_all,c	; 0d09   92 af      ./
	ret			; 0d0b   22         "
;
; ************************************************************************
ram_initialization_data:
	db	41h,0,12h,0				; 0d0c A...	; X0012 = #0
	db	41h,0,1,0				; 0d10 A...	; X0001 = #0
	db	41h,0,3fh,0				; 0d14 A.?.	; X003f = #0
	db	41h,0,13h,0				; 0d18 A...	; X0013 = #0
	db	5,22h,12h,23h,23h,45h,78h		; 0d1c .".##Ex	; 22h = #12h, 23h = #23h, 24h = #23h, 25h =#45H, 26h = #78h  SPECIAL ADDRESS sent on ch51h for binding!
	db	45h,0,4bh,55h,0,0,0,0			; 0d23 E.KU....	; X004b = #55h, X004c..4f = #0
	db	1,2ah,0					; 0d2b .*.	; 2ah = #0
	db	1,29h,0					; 0d2e .).	; 29h = #0
	db	41h,0,0a8h,0				; 0d31 A.(.	; X00a8 = #0
	db	41h,0,93h,0				; 0d35 A...	; X0093 = #0
	db	41h,0,92h,0				; 0d39 A...	; X0092 = #0
	db	41h,0,91h,0				; 0d3d A...	; X0091 = #0
	db	1,5fh,0					; 0d41 ._.	; 5fh = #0
	db	1,5eh,0					; 0d44 .^.	; 5eh = #0
	db	48h,0,0a0h,0f8h,2fh,0f8h,2fh,0f8h	; 0d47 H. x/x/x
	db	2fh,0f8h,2fh				; 0d4f /x/	; X00a0..A8 = #0f82f (4 times 1.5ms) BUT: is overwritten in init!
	db	1,63h,0					; 0d52 .c.	; 63h = #0
	db	0					; 0d55 .	; end marker
; ***************************************************************************
; In: R7: Number of bytes of CRC to use, 0 to turn it off
; ***************************************************************************
;
rf_set_crc:
	mov	rb3r1,r7	; 0d56   8f 19      ..
	clr	a		; 0d58   e4         d
	mov	r7,a		; 0d59   ff         .
	lcall	spi_read_register; 0d5a   12 12 f8   ..x
	mov	rb3r2,r7	; 0d5d   8f 1a      ..
	mov	a,rb3r1		; 0d5f   e5 19      e.
	dec	a		; 0d61   14         .
	jz	X0d74		; 0d62   60 10      `.
	dec	a		; 0d64   14         .
	jz	X0d84		; 0d65   60 1d      `.
	add	a,#2		; 0d67   24 02      $.
	jnz	X0d92		; 0d69   70 27      p'
	mov	r7,rb3r2	; 0d6b   af 1a      /.
	mov	a,r7		; 0d6d   ef         o
	anl	a,#0f7h		; 0d6e   54 f7      Tw
	mov	rb3r2,a		; 0d70   f5 1a      u.
	sjmp	X0d92		; 0d72   80 1e      ..
;
X0d74:	mov	r7,rb3r2	; 0d74   af 1a      /.
	mov	a,r7		; 0d76   ef         o
	orl	a,#8		; 0d77   44 08      D.
	mov	rb3r2,a		; 0d79   f5 1a      u.
	mov	r7,rb3r2	; 0d7b   af 1a      /.
	mov	a,r7		; 0d7d   ef         o
	anl	a,#0fbh		; 0d7e   54 fb      T{
	mov	rb3r2,a		; 0d80   f5 1a      u.
	sjmp	X0d92		; 0d82   80 0e      ..
;
X0d84:	mov	r7,rb3r2	; 0d84   af 1a      /.
	mov	a,r7		; 0d86   ef         o
	orl	a,#8		; 0d87   44 08      D.
	mov	rb3r2,a		; 0d89   f5 1a      u.
	mov	r7,rb3r2	; 0d8b   af 1a      /.
	mov	a,r7		; 0d8d   ef         o
	orl	a,#4		; 0d8e   44 04      D.
	mov	rb3r2,a		; 0d90   f5 1a      u.
X0d92:	mov	r5,rb3r2	; 0d92   ad 1a      -.
	clr	a		; 0d94   e4         d
	mov	r7,a		; 0d95   ff         .
	ljmp	spi_write_register; 0d96   02 11 c7   ..G
;
	mov	4fh,r7		; 0d99   8f 4f      .O	; 0d99-0ddb UNUSED CODE
	mov	r7,#2		; 0d9b   7f 02      ..
	lcall	spi_read_register; 0d9d   12 12 f8   ..x
	mov	50h,r7		; 0da0   8f 50      .P
	mov	r7,#1		; 0da2   7f 01      ..
	lcall	spi_read_register; 0da4   12 12 f8   ..x
	mov	51h,r7		; 0da7   8f 51      .Q
	mov	a,4fh		; 0da9   e5 4f      eO
	add	a,#0fah		; 0dab   24 fa      $z
	jnc	X0db5		; 0dad   50 06      P.
	add	a,#7		; 0daf   24 07      $.
	jz	X0dc9		; 0db1   60 16      `.
	sjmp	X0dce		; 0db3   80 19      ..
;
X0db5:	mov	r7,4fh		; 0db5   af 4f      /O
	mov	a,#1		; 0db7   74 01      t.
	mov	r0,rb0r7	; 0db9   a8 07      (.
	inc	r0		; 0dbb   08         .
	sjmp	X0dc0		; 0dbc   80 02      ..
;
X0dbe:	clr	c		; 0dbe   c3         C
	rlc	a		; 0dbf   33         3
X0dc0:	djnz	r0,X0dbe	; 0dc0   d8 fc      X|
	cpl	a		; 0dc2   f4         t
	anl	50h,a		; 0dc3   52 50      RP
	anl	51h,a		; 0dc5   52 51      RQ
	sjmp	X0dce		; 0dc7   80 05      ..
;
X0dc9:	clr	a		; 0dc9   e4         d
	mov	50h,a		; 0dca   f5 50      uP
	mov	51h,a		; 0dcc   f5 51      uQ
X0dce:	mov	r5,50h		; 0dce   ad 50      -P
	mov	r7,#2		; 0dd0   7f 02      ..
	lcall	spi_write_register; 0dd2   12 11 c7   ..G
	mov	r5,51h		; 0dd5   ad 51      -Q
	mov	r7,#1		; 0dd7   7f 01      ..
	ljmp	spi_write_register; 0dd9   02 11 c7   ..G
;
; ***************************************************************************
init_rf:
	mov	r7,#1		; 0ddc   7f 01      ..
	lcall	rf_set_power_up	; 0dde   12 11 12   ...
	mov	r7,#2		; 0de1   7f 02      ..
	lcall	rf_set_crc	; 0de3   12 0d 56   ..V
	clr	a		; 0de6   e4         d
	mov	r5,a		; 0de7   fd         }
	mov	r7,#4		; 0de8   7f 04      ..
	lcall	rf_modify_config_bit; 0dea   12 0a dd   ..]
	mov	r5,#1		; 0ded   7d 01      }.
	mov	r7,#5		; 0def   7f 05      ..
	lcall	rf_modify_config_bit; 0df1   12 0a dd   ..]
	clr	a		; 0df4   e4         d
	mov	r5,a		; 0df5   fd         }
	mov	r7,#6		; 0df6   7f 06      ..
	lcall	rf_modify_config_bit; 0df8   12 0a dd   ..]
	clr	a		; 0dfb   e4         d
	mov	r5,a		; 0dfc   fd         }
	mov	r7,a		; 0dfd   ff         .
	lcall	rf_enable_data_pipes; 0dfe   12 0c 10   ...
	mov	r7,#5		; 0e01   7f 05      ..
	lcall	rf_setup_address_width; 0e03   12 00 0e   ...
	mov	r3,#1		; 0e06   7b 01      {.
	mov	r2,#0		; 0e08   7a 00      z.
	mov	r1,#8		; 0e0a   79 08      y.
	mov	r7,#6		; 0e0c   7f 06      ..
	lcall	rf_get_or_set_address; 0e0e   12 0e 1b   ...
	mov	r7,#2		; 0e11   7f 02      ..
	lcall	rf_set_data_rate; 0e13   12 0e 58   ..X
	mov	r7,#3		; 0e16   7f 03      ..
	ljmp	rf_set_power	; 0e18   02 11 55   ..U
;
; ***************************************************************************
rf_get_or_set_address:
	mov	rb3r1,r7	; 0e1b   8f 19      ..
	mov	rb3r2,r3	; 0e1d   8b 1a      ..
	mov	model_count,r2	; 0e1f   8a 1b      ..
	mov	count,r1	; 0e21   89 1c      ..
	mov	a,rb3r1		; 0e23   e5 19      e.
	dec	a		; 0e25   14         .
	jz	X0e32		; 0e26   60 0a      `.
	add	a,#0fbh		; 0e28   24 fb      ${
	jnc	X0e45		; 0e2a   50 19      P.
	jz	X0e32		; 0e2c   60 04      `.
	add	a,#6		; 0e2e   24 06      $.
	jnz	X0e57		; 0e30   70 25      p%
X0e32:	lcall	rf_get_number_of_address_bytes; 0e32   12 13 9a   ...
	mov	21h,r7		; 0e35   8f 21      .!
	mov	a,rb3r1		; 0e37   e5 19      e.
	add	a,#2ah		; 0e39   24 2a      $*
	mov	r7,a		; 0e3b   ff         .
	mov	r3,rb3r2	; 0e3c   ab 1a      +.
	mov	r2,model_count	; 0e3e   aa 1b      *.
	mov	r1,count	; 0e40   a9 1c      ).
	ljmp	spi_write_stream; 0e42   02 0f 05   ...
;
X0e45:	mov	a,rb3r1		; 0e45   e5 19      e.
	add	a,#0ah		; 0e47   24 0a      $.
	mov	r7,a		; 0e49   ff         .
	mov	r3,rb3r2	; 0e4a   ab 1a      +.
	mov	r2,model_count	; 0e4c   aa 1b      *.
	mov	r1,count	; 0e4e   a9 1c      ).
	lcall	X07ef		; 0e50   12 07 ef   ..o
	mov	r5,a		; 0e53   fd         }
	lcall	spi_write_register; 0e54   12 11 c7   ..G
X0e57:	ret			; 0e57   22         "
;
; ***************************************************************************
rf_set_data_rate:
	mov	rb3r1,r7	; 0e58   8f 19      ..
	mov	r7,#6		; 0e5a   7f 06      ..
	lcall	spi_read_register; 0e5c   12 12 f8   ..x
	mov	rb3r2,r7	; 0e5f   8f 1a      ..
	mov	a,rb3r1		; 0e61   e5 19      e.
	jz	X0e70		; 0e63   60 0b      `.
	add	a,#0feh		; 0e65   24 fe      $~
	jnz	X0e80		; 0e67   70 17      p.
	mov	r7,rb3r2	; 0e69   af 1a      /.
	mov	a,r7		; 0e6b   ef         o
	orl	a,#20h		; 0e6c   44 20      D 
	sjmp	X0e75		; 0e6e   80 05      ..
;
X0e70:	mov	r7,rb3r2	; 0e70   af 1a      /.
	mov	a,r7		; 0e72   ef         o
	anl	a,#0dfh		; 0e73   54 df      T_
X0e75:	mov	rb3r2,a		; 0e75   f5 1a      u.
	mov	r7,rb3r2	; 0e77   af 1a      /.
	mov	a,r7		; 0e79   ef         o
	anl	a,#0f7h		; 0e7a   54 f7      Tw
	mov	rb3r2,a		; 0e7c   f5 1a      u.
	sjmp	X0e8e		; 0e7e   80 0e      ..
;
X0e80:	mov	r7,rb3r2	; 0e80   af 1a      /.
	mov	a,r7		; 0e82   ef         o
	anl	a,#0dfh		; 0e83   54 df      T_
	mov	rb3r2,a		; 0e85   f5 1a      u.
	mov	r7,rb3r2	; 0e87   af 1a      /.
	mov	a,r7		; 0e89   ef         o
	orl	a,#8		; 0e8a   44 08      D.
	mov	rb3r2,a		; 0e8c   f5 1a      u.
X0e8e:	mov	r5,rb3r2	; 0e8e   ad 1a      -.
	mov	r7,#6		; 0e90   7f 06      ..
	ljmp	spi_write_register; 0e92   02 11 c7   ..G
;
; ***************************************************************************
init_serial:
	clr	IEN0_serial	; 0e95   c2 ac      B,
	setb	S0CON_ren0	; 0e97   d2 9c      R.	; enable reception
	clr	S0CON_sm1	; 0e99   c2 9f      B.	; 8-bit UART
	setb	S0CON_sm0	; 0e9b   d2 9e      R.
	orl	pcon,#80h	; 0e9d   43 87 80   C..
	orl	ADCON,#80h	; 0ea0   43 d8 80   CX.
	mov	a,r7		; 0ea3   ef         o
	add	a,#0fch		; 0ea4   24 fc      $|
	jz	X0ebb		; 0ea6   60 13      `.
	add	a,#0feh		; 0ea8   24 fe      $~
	jz	X0eb5		; 0eaa   60 09      `.
	dec	a		; 0eac   14         .
	jnz	X0ec1		; 0ead   70 12      p.
	mov	r4,#3		; 0eaf   7c 03      |.	; r7 = 7: 57600 Baud?
	mov	r5,#0f7h	; 0eb1   7d f7      }w
	sjmp	X0ec5		; 0eb3   80 10      ..
;
X0eb5:	mov	r4,#3		; 0eb5   7c 03      |.	; r7 = 6: 38400 Baud
	mov	r5,#0f3h	; 0eb7   7d f3      }s
	sjmp	X0ec5		; 0eb9   80 0a      ..
;
X0ebb:	mov	r4,#3		; 0ebb   7c 03      |.	; r7 = 4: 9600 Baud
	mov	r5,#0cch	; 0ebd   7d cc      }L
	sjmp	X0ec5		; 0ebf   80 04      ..
;
X0ec1:	mov	r4,#3		; 0ec1   7c 03      |.	; r7 = 5: 19200 Baud
	mov	r5,#0e6h	; 0ec3   7d e6      }f
X0ec5:	mov	S0RELL,r5	; 0ec5   8d aa      .*
	mov	S0RELH,r4	; 0ec7   8c ba      .:
	clr	S0CON_ti0	; 0ec9   c2 99      B.
	setb	IEN0_serial	; 0ecb   d2 ac      R,
	ret			; 0ecd   22         "
;
; ***************************************************************************
rf_get_no_bytes_in_data_pipe:
	mov	a,r7		; 0ece   ef         o
	dec	a		; 0ecf   14         .
	jz	X0ee6		; 0ed0   60 14      `.
	dec	a		; 0ed2   14         .
	jz	X0eea		; 0ed3   60 15      `.
	dec	a		; 0ed5   14         .
	jz	X0eee		; 0ed6   60 16      `.
	dec	a		; 0ed8   14         .
	jz	X0ef2		; 0ed9   60 17      `.
	dec	a		; 0edb   14         .
	jz	X0ef6		; 0edc   60 18      `.
	add	a,#5		; 0ede   24 05      $.
	jnz	X0eff		; 0ee0   70 1d      p.
	mov	r7,#11h		; 0ee2   7f 11      ..
	sjmp	X0ef8		; 0ee4   80 12      ..
;
X0ee6:	mov	r7,#12h		; 0ee6   7f 12      ..
	sjmp	X0ef8		; 0ee8   80 0e      ..
;
X0eea:	mov	r7,#13h		; 0eea   7f 13      ..
	sjmp	X0ef8		; 0eec   80 0a      ..
;
X0eee:	mov	r7,#14h		; 0eee   7f 14      ..
	sjmp	X0ef8		; 0ef0   80 06      ..
;
X0ef2:	mov	r7,#15h		; 0ef2   7f 15      ..
	sjmp	X0ef8		; 0ef4   80 02      ..
;
X0ef6:	mov	r7,#16h		; 0ef6   7f 16      ..
X0ef8:	lcall	spi_read_register; 0ef8   12 12 f8   ..x
	mov	61h,r7		; 0efb   8f 61      .a
	sjmp	X0f02		; 0efd   80 03      ..
;
X0eff:	clr	a		; 0eff   e4         d
	mov	61h,a		; 0f00   f5 61      ua
X0f02:	mov	r7,61h		; 0f02   af 61      /a
	ret			; 0f04   22         "
;
; ***************************************************************************
spi_write_stream:
	mov	save_r3_r7,r3	; 0f05   8b 1e      ..
	mov	save_r2,r2	; 0f07   8a 1f      ..
	mov	20h,r1		; 0f09   89 20      . 
	clr	RFCON_rfcsn	; 0f0b   c2 e9      Bi
	mov	SPIRDAT,r7	; 0f0d   8f e7      .g
	clr	a		; 0f0f   e4         d
	mov	r7,a		; 0f10   ff         .
X0f11:	mov	a,r7		; 0f11   ef         o
	clr	c		; 0f12   c3         C
	subb	a,21h		; 0f13   95 21      .!
	jnc	X0f32		; 0f15   50 1b      P.
	mov	r3,save_r3_r7	; 0f17   ab 1e      +.
	mov	r2,save_r2	; 0f19   aa 1f      *.
	mov	r1,20h		; 0f1b   a9 20      ) 
	mov	dpl,r7		; 0f1d   8f 82      ..
	mov	dph,#0		; 0f1f   75 83 00   u..
	lcall	get_indirect_dptr_plus_r1_r2; 0f22   12 08 08   ...
	mov	r5,a		; 0f25   fd         }
X0f26:	mov	a,SPIRSTAT	; 0f26   e5 e6      ef
	jnb	acc.1,X0f26	; 0f28   30 e1 fb   0a{
	mov	r6,SPIRDAT	; 0f2b   ae e7      .g
	mov	SPIRDAT,r5	; 0f2d   8d e7      .g
	inc	r7		; 0f2f   0f         .
	sjmp	X0f11		; 0f30   80 df      ._
;
X0f32:	mov	a,SPIRSTAT	; 0f32   e5 e6      ef
	jnb	acc.1,X0f32	; 0f34   30 e1 fb   0a{
	mov	r6,SPIRDAT	; 0f37   ae e7      .g
	setb	RFCON_rfcsn	; 0f39   d2 e9      Ri
	ret			; 0f3b   22         "
;
	mov	4bh,r7		; 0f3c   8f 4b      .K
	mov	4ch,r3		; 0f3e   8b 4c      .L
	mov	4dh,r2		; 0f40   8a 4d      .M
	mov	4eh,r1		; 0f42   89 4e      .N
	mov	a,4bh		; 0f44   e5 4b      eK
	dec	a		; 0f46   14         .
	jz	X0f51		; 0f47   60 08      `.
	add	a,#0fbh		; 0f49   24 fb      ${
	jz	X0f51		; 0f4b   60 04      `.
	add	a,#6		; 0f4d   24 06      $.
	jnz	X0f5c		; 0f4f   70 0b      p.
X0f51:	mov	r3,4ch		; 0f51   ab 4c      +L
	mov	r2,4dh		; 0f53   aa 4d      *M
	mov	r1,4eh		; 0f55   a9 4e      )N
	mov	r7,4bh		; 0f57   af 4b      /K
	ljmp	X0a6b		; 0f59   02 0a 6b   ..k
;
X0f5c:	mov	a,4bh		; 0f5c   e5 4b      eK
	add	a,#0ah		; 0f5e   24 0a      $.
	mov	r7,a		; 0f60   ff         .
	lcall	spi_read_register; 0f61   12 12 f8   ..x
	mov	r3,4ch		; 0f64   ab 4c      +L
	mov	r2,4dh		; 0f66   aa 4d      *M
	mov	r1,4eh		; 0f68   a9 4e      )N
	mov	a,r7		; 0f6a   ef         o
	lcall	set_indirect_r1_r2; 0f6b   12 08 35   ..5
	mov	r7,#1		; 0f6e   7f 01      ..
	ret			; 0f70   22         "
;
	mov	r3,rb0r7	; 0f71   ab 07      +.
	mov	r6,rb0r4	; 0f73   ae 04      ..
	mov	r7,rb0r5	; 0f75   af 05      /.
	mov	r4,#0		; 0f77   7c 00      |.
	mov	r5,#0fah	; 0f79   7d fa      }z
	lcall	div_16		; 0f7b   12 08 59   ..Y
	mov	a,r7		; 0f7e   ef         o
	dec	a		; 0f7f   14         .
	anl	a,#0fh		; 0f80   54 0f      T.
	swap	a		; 0f82   c4         D
	anl	a,#0f0h		; 0f83   54 f0      Tp
	mov	r7,a		; 0f85   ff         .
	mov	r6,60h		; 0f86   ae 60      .`
	mov	a,r6		; 0f88   ee         n
	anl	a,#0fh		; 0f89   54 0f      T.
	orl	a,r7		; 0f8b   4f         O
	mov	60h,a		; 0f8c   f5 60      u`
	mov	a,r3		; 0f8e   eb         k
	anl	a,#0fh		; 0f8f   54 0f      T.
	mov	r7,a		; 0f91   ff         .
	mov	r6,60h		; 0f92   ae 60      .`
	mov	a,r6		; 0f94   ee         n
	anl	a,#0f0h		; 0f95   54 f0      Tp
	orl	a,r7		; 0f97   4f         O
	mov	60h,a		; 0f98   f5 60      u`
	mov	r5,60h		; 0f9a   ad 60      -`
	mov	r7,#4		; 0f9c   7f 04      ..
	ljmp	spi_write_register; 0f9e   02 11 c7   ..G
;
; ***************************************************************************
make_hop_data:
	mov	r7,#1		; 0fa1   7f 01      ..
	lcall	rng_bias_corrector_on_off; 0fa3   12 13 85   ...
	lcall	rng_power_on_off; 0fa6   12 13 7a   ..z
X0fa9:	lcall	rng_is_result_ready; 0fa9   12 12 82   ...
	mov	a,r7		; 0fac   ef         o
	jz	X0fa9		; 0fad   60 fa      `z
	lcall	rng_get_random_byte; 0faf   12 14 46   ..F
	mov	a,r7		; 0fb2   ef         o
	mov	b,#32h		; 0fb3   75 f0 32   up2
	div	ab		; 0fb6   84         .
	mov	r7,b		; 0fb7   af f0      /p
	clr	a		; 0fb9   e4         d
	mov	r6,a		; 0fba   fe         ~
X0fbb:	mov	a,r7		; 0fbb   ef         o
	add	a,r6		; 0fbc   2e         .
	mov	r5,a		; 0fbd   fd         }
	mov	a,#50h		; 0fbe   74 50      tP
	add	a,r6		; 0fc0   2e         .
	mov	dpl,a		; 0fc1   f5 82      u.
	clr	a		; 0fc3   e4         d
	addc	a,#0		; 0fc4   34 00      4.
	mov	dph,a		; 0fc6   f5 83      u.
	mov	a,r5		; 0fc8   ed         m
	movx	@dptr,a		; 0fc9   f0         p
	inc	r6		; 0fca   0e         .
	cjne	r6,#14h,X0fbb	; 0fcb   be 14 ed   >.m
	ret			; 0fce   22         "
;
; ***************************************************************************
i2c_start:
	orl	P1DIR,#4	; 0fcf   43 94 04   C..
	nop			; 0fd2   00         .
	nop			; 0fd3   00         .
	setb	PORT_SCL	; 0fd4   d2 90      R.
	nop			; 0fd6   00         .
	nop			; 0fd7   00         .
	nop			; 0fd8   00         .
	nop			; 0fd9   00         .
	nop			; 0fda   00         .
	nop			; 0fdb   00         .
	nop			; 0fdc   00         .
	nop			; 0fdd   00         .
	nop			; 0fde   00         .
	nop			; 0fdf   00         .
	anl	P1DIR,#0fbh	; 0fe0   53 94 fb   S.{
	clr	PORT_SDA	; 0fe3   c2 92      B.
	nop			; 0fe5   00         .
	nop			; 0fe6   00         .
	nop			; 0fe7   00         .
	nop			; 0fe8   00         .
	nop			; 0fe9   00         .
	nop			; 0fea   00         .
	nop			; 0feb   00         .
	nop			; 0fec   00         .
	nop			; 0fed   00         .
	nop			; 0fee   00         .
	clr	PORT_SCL	; 0fef   c2 90      B.
	nop			; 0ff1   00         .
	nop			; 0ff2   00         .
	nop			; 0ff3   00         .
	nop			; 0ff4   00         .
	nop			; 0ff5   00         .
	nop			; 0ff6   00         .
	nop			; 0ff7   00         .
	nop			; 0ff8   00         .
	nop			; 0ff9   00         .
	nop			; 0ffa   00         .
	ret			; 0ffb   22         "
;
; ***************************************************************************
rf_configure_dynamic_payload:
	mov	5ch,r7		; 0ffc   8f 5c      .\
	mov	r7,#6		; 0ffe   7f 06      ..
	lcall	spi_read_register; 1000   12 12 f8   ..x
	mov	5dh,r7		; 1003   8f 5d      .]
	mov	a,5ch		; 1005   e5 5c      e\
	jz	X100d		; 1007   60 04      `.
	mov	r7,#1		; 1009   7f 01      ..
	sjmp	X100f		; 100b   80 02      ..
;
X100d:	mov	r7,#0		; 100d   7f 00      ..
X100f:	mov	a,r7		; 100f   ef         o
	anl	a,#1		; 1010   54 01      T.
	swap	a		; 1012   c4         D
	rlc	a		; 1013   33         3
	rlc	a		; 1014   33         3
	rlc	a		; 1015   33         3
	anl	a,#80h		; 1016   54 80      T.
	mov	r7,a		; 1018   ff         .
	mov	r6,5dh		; 1019   ae 5d      .]
	mov	a,r6		; 101b   ee         n
	anl	a,#7fh		; 101c   54 7f      T.
	orl	a,r7		; 101e   4f         O
	mov	5dh,a		; 101f   f5 5d      u]
	mov	r5,5dh		; 1021   ad 5d      -]
	mov	r7,#6		; 1023   7f 06      ..
	ljmp	spi_write_register; 1025   02 11 c7   ..G
;
	mov	54h,r7		; 1028   8f 54      .T
	mov	r7,#1dh		; 102a   7f 1d      ..
	lcall	spi_read_register; 102c   12 12 f8   ..x
	mov	55h,r7		; 102f   8f 55      .U
	mov	a,54h		; 1031   e5 54      eT
	jz	X1039		; 1033   60 04      `.
	mov	r7,#1		; 1035   7f 01      ..
	sjmp	X103b		; 1037   80 02      ..
;
X1039:	mov	r7,#0		; 1039   7f 00      ..
X103b:	mov	a,r7		; 103b   ef         o
	anl	a,#1		; 103c   54 01      T.
	add	a,acc		; 103e   25 e0      %`
	add	a,acc		; 1040   25 e0      %`
	mov	r7,a		; 1042   ff         .
	mov	r6,55h		; 1043   ae 55      .U
	mov	a,r6		; 1045   ee         n
	anl	a,#0fbh		; 1046   54 fb      T{
	orl	a,r7		; 1048   4f         O
	mov	55h,a		; 1049   f5 55      uU
	mov	r5,55h		; 104b   ad 55      -U
	mov	r7,#1dh		; 104d   7f 1d      ..
	ljmp	spi_write_register; 104f   02 11 c7   ..G
;
	mov	5ah,r7		; 1052   8f 5a      .Z
	mov	r7,#6		; 1054   7f 06      ..
	lcall	spi_read_register; 1056   12 12 f8   ..x
	mov	5bh,r7		; 1059   8f 5b      .[
	mov	a,5ah		; 105b   e5 5a      eZ
	jz	X1063		; 105d   60 04      `.
	mov	r7,#1		; 105f   7f 01      ..
	sjmp	X1065		; 1061   80 02      ..
;
X1063:	mov	r7,#0		; 1063   7f 00      ..
X1065:	mov	a,r7		; 1065   ef         o
	anl	a,#1		; 1066   54 01      T.
	swap	a		; 1068   c4         D
	anl	a,#0f0h		; 1069   54 f0      Tp
	mov	r7,a		; 106b   ff         .
	mov	r6,5bh		; 106c   ae 5b      .[
	mov	a,r6		; 106e   ee         n
	anl	a,#0efh		; 106f   54 ef      To
	orl	a,r7		; 1071   4f         O
	mov	5bh,a		; 1072   f5 5b      u[
	mov	r5,5bh		; 1074   ad 5b      -[
	mov	r7,#6		; 1076   7f 06      ..
	ljmp	spi_write_register; 1078   02 11 c7   ..G
;
	mov	56h,r7		; 107b   8f 56      .V
	mov	r7,#1dh		; 107d   7f 1d      ..
	lcall	spi_read_register; 107f   12 12 f8   ..x
	mov	57h,r7		; 1082   8f 57      .W
	mov	a,56h		; 1084   e5 56      eV
	jz	X108c		; 1086   60 04      `.
	mov	r7,#1		; 1088   7f 01      ..
	sjmp	X108e		; 108a   80 02      ..
;
X108c:	mov	r7,#0		; 108c   7f 00      ..
X108e:	mov	a,r7		; 108e   ef         o
	anl	a,#1		; 108f   54 01      T.
	add	a,acc		; 1091   25 e0      %`
	mov	r7,a		; 1093   ff         .
	mov	r6,57h		; 1094   ae 57      .W
	mov	a,r6		; 1096   ee         n
	anl	a,#0fdh		; 1097   54 fd      T}
	orl	a,r7		; 1099   4f         O
	mov	57h,a		; 109a   f5 57      uW
	mov	r5,57h		; 109c   ad 57      -W
	mov	r7,#1dh		; 109e   7f 1d      ..
	ljmp	spi_write_register; 10a0   02 11 c7   ..G
;
	mov	58h,r7		; 10a3   8f 58      .X
	mov	r7,#1dh		; 10a5   7f 1d      ..
	lcall	spi_read_register; 10a7   12 12 f8   ..x
	mov	59h,r7		; 10aa   8f 59      .Y
	mov	a,58h		; 10ac   e5 58      eX
	jz	X10b4		; 10ae   60 04      `.
	mov	r7,#1		; 10b0   7f 01      ..
	sjmp	X10b6		; 10b2   80 02      ..
;
X10b4:	mov	r7,#0		; 10b4   7f 00      ..
X10b6:	mov	a,r7		; 10b6   ef         o
	anl	a,#1		; 10b7   54 01      T.
	mov	r7,a		; 10b9   ff         .
	mov	r6,59h		; 10ba   ae 59      .Y
	mov	a,r6		; 10bc   ee         n
	anl	a,#0feh		; 10bd   54 fe      T~
	orl	a,r7		; 10bf   4f         O
	mov	59h,a		; 10c0   f5 59      uY
	mov	r5,59h		; 10c2   ad 59      -Y
	mov	r7,#1dh		; 10c4   7f 1d      ..
	ljmp	spi_write_register; 10c6   02 11 c7   ..G
;
; ***************************************************************************
make_bind_data:
	mov	r7,#1		; 10c9   7f 01      ..
	lcall	rng_bias_corrector_on_off; 10cb   12 13 85   ...
	clr	a		; 10ce   e4         d
	mov	r6,a		; 10cf   fe         ~
X10d0:	mov	r7,#1		; 10d0   7f 01      ..
	lcall	rng_power_on_off; 10d2   12 13 7a   ..z
X10d5:	lcall	rng_is_result_ready; 10d5   12 12 82   ...
	mov	a,r7		; 10d8   ef         o
	jz	X10d5		; 10d9   60 fa      `z
	lcall	rng_get_random_byte; 10db   12 14 46   ..F
	mov	a,#64h		; 10de   74 64      td
	add	a,r6		; 10e0   2e         .
	mov	dpl,a		; 10e1   f5 82      u.
	clr	a		; 10e3   e4         d
	addc	a,#0		; 10e4   34 00      4.
	mov	dph,a		; 10e6   f5 83      u.
	mov	a,r7		; 10e8   ef         o
	movx	@dptr,a		; 10e9   f0         p
	inc	r6		; 10ea   0e         .
	cjne	r6,#5,X10d0	; 10eb   be 05 e2   >.b
	ret			; 10ee   22         "
;
	mov	52h,r7		; 10ef   8f 52      .R
	clr	a		; 10f1   e4         d
	mov	r7,a		; 10f2   ff         .
	lcall	spi_read_register; 10f3   12 12 f8   ..x
	mov	53h,r7		; 10f6   8f 53      .S
	mov	a,52h		; 10f8   e5 52      eR
	mov	r7,53h		; 10fa   af 53      /S
	cjne	a,#1,X1106	; 10fc   b4 01 07   4..
	mov	a,r7		; 10ff   ef         o
	orl	a,#1		; 1100   44 01      D.
	mov	53h,a		; 1102   f5 53      uS
	sjmp	X110b		; 1104   80 05      ..
;
X1106:	mov	a,r7		; 1106   ef         o
	anl	a,#0feh		; 1107   54 fe      T~
	mov	53h,a		; 1109   f5 53      uS
X110b:	mov	r5,53h		; 110b   ad 53      -S
	clr	a		; 110d   e4         d
	mov	r7,a		; 110e   ff         .
	ljmp	spi_write_register; 110f   02 11 c7   ..G
;
; ***************************************************************************
rf_set_power_up:
	mov	rb3r1,r7	; 1112   8f 19      ..
	clr	a		; 1114   e4         d
	mov	r7,a		; 1115   ff         .
	lcall	spi_read_register; 1116   12 12 f8   ..x
	mov	rb3r2,r7	; 1119   8f 1a      ..
	mov	a,rb3r1		; 111b   e5 19      e.
	mov	r7,rb3r2	; 111d   af 1a      /.
	cjne	a,#1,X1129	; 111f   b4 01 07   4..
	mov	a,r7		; 1122   ef         o
	orl	a,#2		; 1123   44 02      D.
	mov	rb3r2,a		; 1125   f5 1a      u.
	sjmp	X112e		; 1127   80 05      ..
;
X1129:	mov	a,r7		; 1129   ef         o
	anl	a,#0fdh		; 112a   54 fd      T}
	mov	rb3r2,a		; 112c   f5 1a      u.
X112e:	mov	r5,rb3r2	; 112e   ad 1a      -.
	clr	a		; 1130   e4         d
	mov	r7,a		; 1131   ff         .
	ljmp	spi_write_register; 1132   02 11 c7   ..G
;
; ***************************************************************************
i2c_stop:
	anl	P1DIR,#0fbh	; 1135   53 94 fb   S.{
	clr	PORT_SDA	; 1138   c2 92      B.
	nop			; 113a   00         .
	setb	PORT_SCL	; 113b   d2 90      R.
	nop			; 113d   00         .
	nop			; 113e   00         .
	nop			; 113f   00         .
	nop			; 1140   00         .
	nop			; 1141   00         .
	nop			; 1142   00         .
	nop			; 1143   00         .
	nop			; 1144   00         .
	nop			; 1145   00         .
	nop			; 1146   00         .
	orl	P1DIR,#4	; 1147   43 94 04   C..
	nop			; 114a   00         .
	nop			; 114b   00         .
	nop			; 114c   00         .
	nop			; 114d   00         .
	nop			; 114e   00         .
	nop			; 114f   00         .
	nop			; 1150   00         .
	nop			; 1151   00         .
	nop			; 1152   00         .
	nop			; 1153   00         .
	ret			; 1154   22         "
;
; ***************************************************************************
rf_set_power:
	mov	rb3r1,r7	; 1155   8f 19      ..
	mov	r7,#6		; 1157   7f 06      ..
	lcall	spi_read_register; 1159   12 12 f8   ..x
	mov	rb3r2,r7	; 115c   8f 1a      ..
	mov	a,rb3r1		; 115e   e5 19      e.
	anl	a,#3		; 1160   54 03      T.
	add	a,acc		; 1162   25 e0      %`
	mov	r7,a		; 1164   ff         .
	mov	r6,rb3r2	; 1165   ae 1a      ..
	mov	a,r6		; 1167   ee         n
	anl	a,#0f9h		; 1168   54 f9      Ty
	orl	a,r7		; 116a   4f         O
	mov	rb3r2,a		; 116b   f5 1a      u.
	mov	r5,rb3r2	; 116d   ad 1a      -.
	mov	r7,#6		; 116f   7f 06      ..
	ljmp	spi_write_register; 1171   02 11 c7   ..G
;
; ***************************************************************************
; In: r6:r7 address   r5: data
; ***************************************************************************
write_byte_to_eeprom:
	mov	r3,rb0r7	; 1174   ab 07      +.
	mov	r2,rb0r6	; 1176   aa 06      *.
	mov	r4,rb0r5	; 1178   ac 05      ,.
	mov	r7,rb0r2	; 117a   af 02      /.
	mov	r6,#0		; 117c   7e 00      ~.
	mov	a,r7		; 117e   ef         o
	add	a,acc		; 117f   25 e0      %`
	mov	r7,a		; 1181   ff         .
	mov	a,r6		; 1182   ee         n
	rlc	a		; 1183   33         3
	mov	r6,a		; 1184   fe         ~
	mov	a,r7		; 1185   ef         o
	add	a,#0a0h		; 1186   24 a0      $ 
	mov	r7,a		; 1188   ff         .
	clr	a		; 1189   e4         d
	addc	a,r6		; 118a   3e         >
	mov	r6,a		; 118b   fe         ~
	mov	a,r3		; 118c   eb         k
	mov	r5,a		; 118d   fd         }
	mov	r3,rb0r4	; 118e   ab 04      +.
	ljmp	i2c_write_byte_to_device; 1190   02 12 0c   ...
;
; ***************************************************************************
; In: r6:r7 address to read from
; ***************************************************************************
read_byte_from_eeprom:
	mov	r5,rb0r7	; 1193   ad 07      -.
	mov	r4,rb0r6	; 1195   ac 06      ,.
	mov	r7,rb0r4	; 1197   af 04      /.
	mov	r6,#0		; 1199   7e 00      ~.
	mov	a,r7		; 119b   ef         o
	add	a,acc		; 119c   25 e0      %`
	mov	r7,a		; 119e   ff         .
	mov	a,r6		; 119f   ee         n
	rlc	a		; 11a0   33         3
	mov	r6,a		; 11a1   fe         ~
	mov	a,r7		; 11a2   ef         o
	add	a,#0a0h		; 11a3   24 a0      $ 
	mov	r7,a		; 11a5   ff         .
	clr	a		; 11a6   e4         d
	addc	a,r6		; 11a7   3e         >
	mov	r6,a		; 11a8   fe         ~
	lcall	i2c_read_byte_from_device; 11a9   12 12 38   ..8
	ret			; 11ac   22         "
;
; ***************************************************************************
write_byte_to_flash:
	mov	c,IEN0_all	; 11ad   a2 af      "/
	mov	f0,c		; 11af   92 d5      .U
	clr	IEN0_all	; 11b1   c2 af      B/
	setb	FSR_wen		; 11b3   d2 fd      R}
	mov	dpl,r7		; 11b5   8f 82      ..
	mov	dph,r6		; 11b7   8e 83      ..
	mov	a,r5		; 11b9   ed         m
	movx	@dptr,a		; 11ba   f0         p
X11bb:	jnb	FSR_rdyn,X11c2	; 11bb   30 fc 04   0|.
	clr	FSR_wen		; 11be   c2 fd      B}
	sjmp	X11bb		; 11c0   80 f9      .y
;
X11c2:	mov	c,f0		; 11c2   a2 d5      "U
	mov	IEN0_all,c	; 11c4   92 af      ./
	ret			; 11c6   22         "
;
; ***************************************************************************
; In: R7: register number, R5: value
; ***************************************************************************
spi_write_register:
	mov	rb3r5,r5	; 11c7   8d 1d      ..
	clr	RFCON_rfcsn	; 11c9   c2 e9      Bi
	mov	a,r7		; 11cb   ef         o
	add	a,#20h		; 11cc   24 20      $ 
	mov	r7,a		; 11ce   ff         .
	lcall	spi_write	; 11cf   12 14 08   ...
	mov	save_r3_r7,r7	; 11d2   8f 1e      ..
	mov	r7,rb3r5	; 11d4   af 1d      /.
	lcall	spi_write	; 11d6   12 14 08   ...
	setb	RFCON_rfcsn	; 11d9   d2 e9      Ri
	mov	r7,save_r3_r7	; 11db   af 1e      /.
	ret			; 11dd   22         "
;
X11de:	setb	c		; 11de   d3         S
	mov	a,r7		; 11df   ef         o
	subb	a,#0		; 11e0   94 00      ..
	mov	a,r6		; 11e2   ee         n
	subb	a,#0		; 11e3   94 00      ..
	jc	X11f4		; 11e5   40 0d      @.
	clr	a		; 11e7   e4         d
	mov	r5,a		; 11e8   fd         }
X11e9:	inc	r5		; 11e9   0d         .
	cjne	r5,#0ah,X11e9	; 11ea   bd 0a fc   =.|
	mov	a,r7		; 11ed   ef         o
	dec	r7		; 11ee   1f         .
	jnz	X11de		; 11ef   70 ed      pm
	dec	r6		; 11f1   1e         .
	sjmp	X11de		; 11f2   80 ea      .j
;
X11f4:	ret			; 11f4   22         "
;
; ***************************************************************************
init_gpio:
	mov	P1CON,#52h	; 11f5   75 9f 52   u.R
	mov	P1CON,#50h	; 11f8   75 9f 50   u.P
	clr	PORT_SCL	; 11fb   c2 90      B.
	clr	PORT_SDA	; 11fd   c2 92      B.
	anl	P1DIR,#0feh	; 11ff   53 94 fe   S.~
	orl	P1DIR,#4	; 1202   43 94 04   C..
	mov	r7,#0c8h	; 1205   7f c8      .H
	mov	r6,#0		; 1207   7e 00      ~.
	ljmp	X11de		; 1209   02 11 de   ..^
;
; ***************************************************************************
i2c_write_byte_to_device:
	mov	r6,rb0r7	; 120c   ae 07      ..
	mov	r4,rb0r3	; 120e   ac 03      ,.
	lcall	ic2_write_address; 1210   12 08 ae   ...
	mov	r7,rb0r4	; 1213   af 04      /.
	lcall	i2c_write_byte	; 1215   12 08 b6   ..6
	lcall	i2c_stop	; 1218   12 11 35   ..5
X121b:	lcall	i2c_has_write_finished; 121b   12 0c 6a   ..j
	mov	a,r7		; 121e   ef         o
	jz	X121b		; 121f   60 fa      `z
	ret			; 1221   22         "
;
; ***************************************************************************
flash_erase_page:
	mov	c,IEN0_all	; 1222   a2 af      "/
	mov	f0,c		; 1224   92 d5      .U
	clr	IEN0_all	; 1226   c2 af      B/
	setb	FSR_wen		; 1228   d2 fd      R}
	mov	FCR,r7		; 122a   8f fa      .z
X122c:	jnb	FSR_rdyn,X1233	; 122c   30 fc 04   0|.
	clr	FSR_wen		; 122f   c2 fd      B}
	sjmp	X122c		; 1231   80 f9      .y
;
X1233:	mov	c,f0		; 1233   a2 d5      "U
	mov	IEN0_all,c	; 1235   92 af      ./
	ret			; 1237   22         "
;
; ***************************************************************************
i2c_read_byte_from_device:
	mov	r4,rb0r7	; 1238   ac 07      ,.
	lcall	ic2_write_address; 123a   12 08 ae   ...
	lcall	i2c_start	; 123d   12 0f cf   ..O
	mov	a,r4		; 1240   ec         l
	inc	a		; 1241   04         .
	mov	r7,a		; 1242   ff         .
	lcall	i2c_write_byte	; 1243   12 08 b6   ..6
	lcall	i2c_read_byte	; 1246   12 0b 48   ..H
	lcall	i2c_stop	; 1249   12 11 35   ..5
	ret			; 124c   22         "
;
; ***************************************************************************
; In: R7: channel number
; ***************************************************************************
spi_set_rf_channel:
	mov	a,r7		; 124d   ef         o
	anl	a,#7fh		; 124e   54 7f      T.
	mov	r7,a		; 1250   ff         .
	mov	r6,rb1r7	; 1251   ae 0f      ..
	mov	a,r6		; 1253   ee         n
	anl	a,#80h		; 1254   54 80      T.
	orl	a,r7		; 1256   4f         O
	mov	rb1r7,a		; 1257   f5 0f      u.
	mov	r5,rb1r7	; 1259   ad 0f      -.
	mov	r7,#5		; 125b   7f 05      ..
	ljmp	spi_write_register; 125d   02 11 c7   ..G
;
	mov	a,#1		; 1260   74 01      t.
	mov	r0,rb0r7	; 1262   a8 07      (.
	inc	r0		; 1264   08         .
	sjmp	X1269		; 1265   80 02      ..
;
X1267:	clr	c		; 1267   c3         C
	rlc	a		; 1268   33         3
X1269:	djnz	r0,X1267	; 1269   d8 fc      X|
	mov	r5,a		; 126b   fd         }
	mov	r7,#7		; 126c   7f 07      ..
	ljmp	spi_write_register; 126e   02 11 c7   ..G
;
	mov	a,r7		; 1271   ef         o
	anl	a,#1		; 1272   54 01      T.
	swap	a		; 1274   c4         D
	rlc	a		; 1275   33         3
	rlc	a		; 1276   33         3
	anl	a,#0c0h		; 1277   54 c0      T@
	mov	r7,a		; 1279   ff         .
	mov	a,CLKCTRL	; 127a   e5 a3      e#
	anl	a,#0b7h		; 127c   54 b7      T7
	orl	a,r7		; 127e   4f         O
	mov	CLKCTRL,a	; 127f   f5 a3      u#
	ret			; 1281   22         "
;
; ***************************************************************************
rng_is_result_ready:
	mov	a,RNGCTL	; 1282   e5 d6      eV
	anl	a,#20h		; 1284   54 20      T 
	setb	c		; 1286   d3         S
	subb	a,#0		; 1287   94 00      ..
	jc	X128f		; 1289   40 04      @.
	mov	r7,#1		; 128b   7f 01      ..
	sjmp	X1291		; 128d   80 02      ..
;
X128f:	mov	r7,#0		; 128f   7f 00      ..
X1291:	ret			; 1291   22         "
;
; ***************************************************************************
set_keep_osc_in_retention_mode:
	mov	a,r7		; 1292   ef         o
	jz	X129e		; 1293   60 09      `.
	mov	a,CLKCTRL	; 1295   e5 a3      e#
	orl	a,#80h		; 1297   44 80      D.
	anl	a,#0f7h		; 1299   54 f7      Tw
	mov	CLKCTRL,a	; 129b   f5 a3      u#
	ret			; 129d   22         "
;
X129e:	anl	CLKCTRL,#77h	; 129e   53 a3 77   S#w
	ret			; 12a1   22         "
;
; ***************************************************************************
read_lf_clock_phase:
	mov	a,CLKLFCTRL	; 12a2   e5 ad      e-
	anl	a,#80h		; 12a4   54 80      T.
	setb	c		; 12a6   d3         S
	subb	a,#0		; 12a7   94 00      ..
	jc	X12af		; 12a9   40 04      @.
	mov	r7,#1		; 12ab   7f 01      ..
	sjmp	X12b1		; 12ad   80 02      ..
;
X12af:	mov	r7,#0		; 12af   7f 00      ..
X12b1:	ret			; 12b1   22         "
;
; ***************************************************************************
is_lf_clock_ready:
	mov	a,CLKLFCTRL	; 12b2   e5 ad      e-
	anl	a,#40h		; 12b4   54 40      T@
	setb	c		; 12b6   d3         S
	subb	a,#0		; 12b7   94 00      ..
	jc	X12bf		; 12b9   40 04      @.
	mov	r7,#1		; 12bb   7f 01      ..
	sjmp	X12c1		; 12bd   80 02      ..
;
X12bf:	mov	r7,#0		; 12bf   7f 00      ..
X12c1:	ret			; 12c1   22         "
;
; ***************************************************************************
set_started_oscillators:
	mov	a,r7		; 12c2   ef         o
	anl	a,#3		; 12c3   54 03      T.
	swap	a		; 12c5   c4         D
	anl	a,#0f0h		; 12c6   54 f0      Tp
	mov	r7,a		; 12c8   ff         .
	mov	a,CLKCTRL	; 12c9   e5 a3      e#
	anl	a,#0c7h		; 12cb   54 c7      TG
	orl	a,r7		; 12cd   4f         O
	mov	CLKCTRL,a	; 12ce   f5 a3      u#
	ret			; 12d0   22         "
;
; ***************************************************************************
rf_get_lost_packet_count:
	mov	r7,#8		; 12d1   7f 08      ..
	lcall	spi_read_register; 12d3   12 12 f8   ..x
	mov	a,r7		; 12d6   ef         o
	anl	a,#0f0h		; 12d7   54 f0      Tp
	swap	a		; 12d9   c4         D
	anl	a,#0fh		; 12da   54 0f      T.
	mov	r7,a		; 12dc   ff         .
	ret			; 12dd   22         "
;
; ***************************************************************************
rf_get_tx_fifo_status:
	mov	r7,#17h		; 12de   7f 17      ..
	lcall	spi_read_register; 12e0   12 12 f8   ..x
	mov	a,r7		; 12e3   ef         o
	anl	a,#30h		; 12e4   54 30      T0
	swap	a		; 12e6   c4         D
	anl	a,#0fh		; 12e7   54 0f      T.
	mov	r7,a		; 12e9   ff         .
	ret			; 12ea   22         "
;
; ***************************************************************************
rf_get_tx_reuse:
	lcall	rf_get_fifo_status; 12eb   12 14 34   ..4
	mov	a,r7		; 12ee   ef         o
	anl	a,#40h		; 12ef   54 40      T@
	swap	a		; 12f1   c4         D
	rrc	a		; 12f2   13         .
	rrc	a		; 12f3   13         .
	anl	a,#3		; 12f4   54 03      T.
	mov	r7,a		; 12f6   ff         .
	ret			; 12f7   22         "
;
; ***************************************************************************
; In: A: register    Out: R7: read value
; ***************************************************************************
spi_read_register:
	clr	RFCON_rfcsn	; 12f8   c2 e9      Bi
	lcall	spi_write	; 12fa   12 14 08   ...
	clr	a		; 12fd   e4         d
	mov	r7,a		; 12fe   ff         .
	lcall	spi_write	; 12ff   12 14 08   ...
	setb	RFCON_rfcsn	; 1302   d2 e9      Ri
	ret			; 1304   22         "
;
; ***************************************************************************
rf_get_and_clear_interrupts:
	mov	r5,#70h		; 1305   7d 70      }p
	mov	r7,#7		; 1307   7f 07      ..
	lcall	spi_write_register; 1309   12 11 c7   ..G
	mov	a,r7		; 130c   ef         o
	anl	a,#70h		; 130d   54 70      Tp
	mov	r7,a		; 130f   ff         .
	ret			; 1310   22         "
;
; ***************************************************************************
rf_is_rx_fifo_full:
	mov	r7,#17h		; 1311   7f 17      ..
	lcall	spi_read_register; 1313   12 12 f8   ..x
	mov	a,r7		; 1316   ef         o
	clr	c		; 1317   c3         C
	rrc	a		; 1318   13         .
	anl	a,#1		; 1319   54 01      T.
	mov	r7,a		; 131b   ff         .
	ret			; 131c   22         "
;
; ***************************************************************************
rf_is_tx_fifo_full:
	mov	r7,#17h		; 131d   7f 17      ..
	lcall	spi_read_register; 131f   12 12 f8   ..x
	mov	a,r7		; 1322   ef         o
	swap	a		; 1323   c4         D
	rrc	a		; 1324   13         .
	anl	a,#1		; 1325   54 01      T.
	mov	r7,a		; 1327   ff         .
	ret			; 1328   22         "
;
; ***************************************************************************
rf_enable_dynamic_payload:
	mov	a,r7		; 1329   ef         o
	anl	a,#3fh		; 132a   54 3f      T?
	mov	62h,a		; 132c   f5 62      ub
	mov	r5,62h		; 132e   ad 62      -b
	mov	r7,#1ch		; 1330   7f 1c      ..
	ljmp	spi_write_register; 1332   02 11 c7   ..G
;
; ************************************************************************
read_current_model_no_from_eeprom:
	clr	a		; 1335   e4         d
	mov	r7,a		; 1336   ff         .
	mov	r6,a		; 1337   fe         ~
	lcall	read_byte_from_eeprom; 1338   12 11 93   ...
	mov	dptr,#X00a8	; 133b   90 00 a8   ..(
	mov	a,r7		; 133e   ef         o
	movx	@dptr,a		; 133f   f0         p
	ret			; 1340   22         "
;
; ***************************************************************************
set_system_clock_frequency:
	mov	a,r7		; 1341   ef         o
	anl	a,#7		; 1342   54 07      T.
	mov	r7,a		; 1344   ff         .
	mov	a,CLKCTRL	; 1345   e5 a3      e#
	anl	a,#0f0h		; 1347   54 f0      Tp
	orl	a,r7		; 1349   4f         O
	mov	CLKCTRL,a	; 134a   f5 a3      u#
	ret			; 134c   22         "
;
; ***************************************************************************
set_lf_clock_frequency:
	mov	a,r7		; 134d   ef         o
	anl	a,#7		; 134e   54 07      T.
	mov	r7,a		; 1350   ff         .
	mov	a,CLKLFCTRL	; 1351   e5 ad      e-
	anl	a,#0f8h		; 1353   54 f8      Tx
	orl	a,r7		; 1355   4f         O
	mov	CLKLFCTRL,a	; 1356   f5 ad      u-
	ret			; 1358   22         "
;
; ************************************************************************
; Returns 2 if the XTAL OSC is ready, otherwise 1 if running from the RC OSC
; ************************************************************************
get_osc_status:
	mov	a,CLKLFCTRL	; 1359   e5 ad      e-
	jnb	acc.3,X1361	; 135b   30 e3 03   0c.
	mov	r7,#2		; 135e   7f 02      ..
	ret			; 1360   22         "
;
X1361:	mov	r7,#1		; 1361   7f 01      ..
	ret			; 1363   22         "
;
; ***************************************************************************
rf_is_tx_fifo_empty:
	mov	r7,#17h		; 1364   7f 17      ..
	lcall	spi_read_register; 1366   12 12 f8   ..x
	mov	a,r7		; 1369   ef         o
	swap	a		; 136a   c4         D
	anl	a,#1		; 136b   54 01      T.
	mov	r7,a		; 136d   ff         .
	ret			; 136e   22         "
;
; ***************************************************************************
save_current_model:
	mov	dptr,#X00a8	; 136f   90 00 a8   ..(
	movx	a,@dptr		; 1372   e0         `
	mov	r5,a		; 1373   fd         }
	clr	a		; 1374   e4         d
	mov	r7,a		; 1375   ff         .
	mov	r6,a		; 1376   fe         ~
	ljmp	write_byte_to_eeprom; 1377   02 11 74   ..t
;
; ***************************************************************************
rng_power_on_off:
	mov	a,r7		; 137a   ef         o
	jz	X1381		; 137b   60 04      `.
	orl	RNGCTL,#80h	; 137d   43 d6 80   CV.
	ret			; 1380   22         "
;
X1381:	anl	RNGCTL,#7fh	; 1381   53 d6 7f   SV.
	ret			; 1384   22         "
;
; ***************************************************************************
rng_bias_corrector_on_off:
	mov	a,r7		; 1385   ef         o
	jz	X138c		; 1386   60 04      `.
	mov	RNGCTL,#40h	; 1388   75 d6 40   uV@
	ret			; 138b   22         "
;
X138c:	anl	RNGCTL,#0bfh	; 138c   53 d6 bf   SV?
	ret			; 138f   22         "
;
; ************************************************************************
init_timer0:
	mov	tmod,#1		; 1390   75 89 01   u..
	clr	a		; 1393   e4         d
	mov	tcon,a		; 1394   f5 88      u.
	mov	IEN0,#82h	; 1396   75 a8 82   u(.
	ret			; 1399   22         "
;
; ***************************************************************************
; Out: R7: Number of address bytes
; ***************************************************************************
rf_get_number_of_address_bytes:
	mov	r7,#3		; 139a   7f 03      ..	; SETUP_AW
	lcall	spi_read_register; 139c   12 12 f8   ..x
	mov	a,r7		; 139f   ef         o
	add	a,#2		; 13a0   24 02      $.
	mov	r7,a		; 13a2   ff         .
	ret			; 13a3   22         "
;
; ***************************************************************************
rf_is_rx_fifo_empty:
	mov	r7,#17h		; 13a4   7f 17      ..	; 13a4-13f3 UNUSED CODE
	lcall	spi_read_register; 13a6   12 12 f8   ..x
	mov	a,r7		; 13a9   ef         o
	anl	a,#1		; 13aa   54 01      T.
	mov	r7,a		; 13ac   ff         .
	ret			; 13ad   22         "
;
; ***************************************************************************
rf_get_rx_fifo_status:
	mov	r7,#17h		; 13ae   7f 17      ..
	lcall	spi_read_register; 13b0   12 12 f8   ..x
	mov	a,r7		; 13b3   ef         o
	anl	a,#3		; 13b4   54 03      T.
	mov	r7,a		; 13b6   ff         .
	ret			; 13b7   22         "
;
; ***************************************************************************
rf_get_retransmit_count:
	mov	r7,#8		; 13b8   7f 08      ..
	lcall	spi_read_register; 13ba   12 12 f8   ..x
	mov	a,r7		; 13bd   ef         o
	anl	a,#0fh		; 13be   54 0f      T.
	mov	r7,a		; 13c0   ff         .
	ret			; 13c1   22         "
;
; ***************************************************************************
rf_get_power_detected:
	mov	r7,#9		; 13c2   7f 09      ..
	lcall	spi_read_register; 13c4   12 12 f8   ..x
	mov	a,r7		; 13c7   ef         o
	anl	a,#1		; 13c8   54 01      T.
	mov	r7,a		; 13ca   ff         .
	ret			; 13cb   22         "
;
; ***************************************************************************
rf_write_ack_payload:
	mov	a,r7		; 13cc   ef         o
	orl	a,#0a8h		; 13cd   44 a8      D(
	mov	r7,a		; 13cf   ff         .
	mov	21h,4ah		; 13d0   85 4a 21   .J!
	ljmp	spi_write_stream; 13d3   02 0f 05   ...
;
; ***************************************************************************
rf_get_data_pipe_ready:
	lcall	rf_get_status	; 13d6   12 13 fe   ..~
	mov	a,r7		; 13d9   ef         o
	anl	a,#0eh		; 13da   54 0e      T.
	clr	c		; 13dc   c3         C
	rrc	a		; 13dd   13         .
	mov	r7,a		; 13de   ff         .
	ret			; 13df   22         "
;
; ***************************************************************************
rf_reuse_tx_payload:
	clr	RFCON_rfcsn	; 13e0   c2 e9      Bi
	mov	r7,#0e3h	; 13e2   7f e3      .c
	lcall	spi_write	; 13e4   12 14 08   ...
	setb	RFCON_rfcsn	; 13e7   d2 e9      Ri
	ret			; 13e9   22         "
;
; ***************************************************************************
rf_flush_rx:
	clr	RFCON_rfcsn	; 13ea   c2 e9      Bi
	mov	r7,#0e2h	; 13ec   7f e2      .b
	lcall	spi_write	; 13ee   12 14 08   ...
	setb	RFCON_rfcsn	; 13f1   d2 e9      Ri
	ret			; 13f3   22         "
;
; ***************************************************************************
rf_flush_tx:
	clr	RFCON_rfcsn	; 13f4   c2 e9      Bi
	mov	r7,#0e1h	; 13f6   7f e1      .a
	lcall	spi_write	; 13f8   12 14 08   ...
	setb	RFCON_rfcsn	; 13fb   d2 e9      Ri
	ret			; 13fd   22         "
;
; ***************************************************************************
rf_get_status:
	clr	RFCON_rfcsn	; 13fe   c2 e9      Bi
	mov	r7,#0ffh	; 1400   7f ff      ..
	lcall	spi_write	; 1402   12 14 08   ...
	setb	RFCON_rfcsn	; 1405   d2 e9      Ri
	ret			; 1407   22         "
;
; ***************************************************************************
spi_write:
	mov	SPIRDAT,r7	; 1408   8f e7      .g
; ***************************************************************************
_spi_write_loop:
	mov	a,SPIRSTAT	; 140a   e5 e6      ef
	jnb	acc.1,_spi_write_loop; 140c   30 e1 fb   0a{
	mov	r7,SPIRDAT	; 140f   af e7      /g
	ret			; 1411   22         "
;
	mov	a,r7		; 1412   ef         o
	add	a,#11h		; 1413   24 11      $.
	mov	r7,a		; 1415   ff         .
	ljmp	spi_write_register; 1416   02 11 c7   ..G
;
; ***************************************************************************
rf_write_tx_payload:
	mov	21h,r5		; 1419   8d 21      .!
	mov	r7,#0a0h	; 141b   7f a0      . 	; W_TX_PAYLOAD
	ljmp	spi_write_stream; 141d   02 0f 05   ...
;
	mov	21h,r5		; 1420   8d 21      .!
	mov	r7,#0b0h	; 1422   7f b0      .0
	ljmp	spi_write_stream; 1424   02 0f 05   ...
;
	mov	dpl,r7		; 1427   8f 82      ..
	mov	dph,r6		; 1429   8e 83      ..
	movx	a,@dptr		; 142b   e0         `
	mov	r7,a		; 142c   ff         .
	ret			; 142d   22         "
;
; ***************************************************************************
rf_get_observe_tx:
	mov	r7,#8		; 142e   7f 08      ..
	lcall	spi_read_register; 1430   12 12 f8   ..x
	ret			; 1433   22         "
;
; ***************************************************************************
rf_get_fifo_status:
	mov	r7,#17h		; 1434   7f 17      ..
	lcall	spi_read_register; 1436   12 12 f8   ..x
	ret			; 1439   22         "
;
; ***************************************************************************
rf_get_rx_payload_width:
	mov	r7,#60h		; 143a   7f 60      .`
	lcall	spi_read_register; 143c   12 12 f8   ..x
	ret			; 143f   22         "
;
	mov	r7,#8		; 1440   7f 08      ..
	lcall	X0a6b		; 1442   12 0a 6b   ..k
	ret			; 1445   22         "
;
; ***************************************************************************
rng_get_random_byte:
	mov	r7,RNGDAT	; 1446   af d7      /W
	ret			; 1448   22         "
;
;	Register/Memory Equates
;
rb0r0	equ	0
rb0r1	equ	1
rb0r2	equ	2
rb0r3	equ	3
rb0r4	equ	4
rb0r5	equ	5
rb0r6	equ	6
rb0r7	equ	7
rb1r0	equ	8
rb1r6	equ	0eh
rb1r7	equ	0fh
rb3r0	equ	18h
rb3r1	equ	19h
rb3r2	equ	1ah
model_count	equ	1bh
count	equ	1ch
rb3r5	equ	1dh
save_r3_r7	equ	1eh
save_r2	equ	1fh
f_model_no	equ	5eh
f_servo_data	equ	5fh
f_stick_data	equ	63h
;
;	SFR Equates
;
P0DIR	equ	93h
P1DIR	equ	94h
S0CON	equ	98h
S0BUF	equ	99h
P0CON	equ	9eh
P1CON	equ	9fh
PWMDC0	equ	0a1h
PWMDC1	equ	0a2h
CLKCTRL	equ	0a3h
PWRDWN	equ	0a4h
WUCON	equ	0a5h
MEMCON	equ	0a7h
IEN0	equ	0a8h
IP0	equ	0a9h
S0RELL	equ	0aah
RTC2CPT01	equ	0abh
RTC2CPT10	equ	0ach
CLKLFCTRL	equ	0adh
OPMCON	equ	0aeh
WDSW	equ	0afh
RSTREAS	equ	0b1h
PWMCON	equ	0b2h
RTC2CON	equ	0b3h
RTC2CMP0	equ	0b4h
RTC2CMP1	equ	0b5h
RTC2CPT00	equ	0b6h
IEN1	equ	0b8h
IP1	equ	0b9h
S0RELH	equ	0bah
SPISCON0	equ	0bch
SPISSTAT	equ	0beh
SPISDAT	equ	0bfh
IRCON	equ	0c0h
CCEN	equ	0c1h
CCL1	equ	0c2h
CCH1	equ	0c3h
CCL2	equ	0c4h
CCH2	equ	0c5h
CCL3	equ	0c6h
CCH3	equ	0c7h
MPAGE	equ	0c9h
CRCL	equ	0cah
CRCH	equ	0cbh
WUOPC1	equ	0ceh
WUOPC0	equ	0cfh
ADCCON3	equ	0d1h
ADCCON2	equ	0d2h
ADCCON1	equ	0d3h
ADCDATH	equ	0d4h
ADCDATL	equ	0d5h
RNGCTL	equ	0d6h
RNGDAT	equ	0d7h
ADCON	equ	0d8h
W2SADR	equ	0d9h
W2DAT	equ	0dah
COMPCON	equ	0dbh
CCPDATIA	equ	0ddh
CCPDATIB	equ	0deh
CCPDATO	equ	0dfh
W2CON1	equ	0e1h
W2CON0	equ	0e2h
SPIRCON0	equ	0e4h
SPIRCON1	equ	0e5h
SPIRSTAT	equ	0e6h
SPIRDAT	equ	0e7h
RFCON	equ	0e8h
MD0	equ	0e9h
MD1	equ	0eah
MD2	equ	0ebh
MD3	equ	0ech
MD4	equ	0edh
MD5	equ	0eeh
ARCON	equ	0efh
FSR	equ	0f8h
FPCR	equ	0f9h
FCR	equ	0fah
SPIMCON0	equ	0fch
SPIMCON1	equ	0fdh
SPIMSTAT	equ	0feh
SPIMDAT	equ	0ffh
;
;	SFR bit Equates
;
TCON_it0	equ	88h
TCON_ie0	equ	89h
TCON_it1	equ	8ah
TCON_ie1	equ	8bh
TCON_tr0	equ	8ch
TCON_tf0	equ	8dh
TCON_tr1	equ	8eh
TCON_tf1	equ	8fh
PORT_SCL	equ	90h
PORT_SDA	equ	92h
PORT_TX_OFF	equ	94h
S0CON_ri0	equ	98h
S0CON_ti0	equ	99h
S0CON_rb80	equ	9ah
S0CON_tb80	equ	9bh
S0CON_ren0	equ	9ch
S0CON_sm20	equ	9dh
S0CON_sm0	equ	9eh
S0CON_sm1	equ	9fh
IEN0_ifp	equ	0a8h
IEN0_tf0	equ	0a9h
IEN0_pwrfail	equ	0aah
IEN0_tf1	equ	0abh
IEN0_serial	equ	0ach
IEN0_tf2	equ	0adh
IEN0_6	equ	0aeh
IEN0_all	equ	0afh
IEN1_rfready	equ	0b8h
IEN1_rfirq	equ	0b9h
IEN1_spi_iic	equ	0bah
IEN1_wakeup	equ	0bbh
IEN1_misc	equ	0bch
IEN1_tick	equ	0bdh
IEN1_6	equ	0beh
IEN1_exf2	equ	0bfh
IRCON_rfready	equ	0c0h
IRCON_rfiry	equ	0c1h
IRCON_spi_iic	equ	0c2h
IRCON_wakeup	equ	0c3h
IRCON_misc	equ	0c4h
IRCON_tick	equ	0c5h
IRCON_tf2	equ	0c6h
IRCON_exf2	equ	0c7h
T2CON_t2i0	equ	0c8h
T2CON_t2i1	equ	0c9h
T2CON_t2cm	equ	0cah
T2CON_t2r0	equ	0cbh
T2CON_t2r1	equ	0cch
T2CON_i2fr	equ	0cdh
T2CON_i3fr	equ	0ceh
T2CON_t2ps	equ	0cfh
PSW_f1	equ	0d1h
ADCON_bd	equ	0dfh
RFCON_rfce	equ	0e8h
RFCON_rfcsn	equ	0e9h
RFCON_rfcken	equ	0eah
FSR_0	equ	0f8h
FSR_1	equ	0f9h
FSR_rdismb	equ	0fah
FSR_infen	equ	0fbh
FSR_rdyn	equ	0fch
FSR_wen	equ	0fdh
FSR_stp	equ	0feh
FSR_endebug	equ	0ffh
;
;	Operand symbol equates
;
;  These are operand symbols from the control
;  file that are referenced in the code
;
bind_data	equ	15h
div_5ms	equ	1
failsafe_tx_value	equ	0
fs_st_h	equ	3eh
fs_st_l	equ	40h
fs_th_h	equ	14h
fs_th_l	equ	3dh
stick_data	equ	0a0h
tx_packet	equ	41h
uart_data+1	equ	3
uart_data+2	equ	3
uart_data+2	equ	4
uart_data+3	equ	5
uart_data+4	equ	6
uart_data+5	equ	7
uart_payload_count	equ	93h
;
;	Miscellaneous equates
;
;  These are addresses referenced in the code but
;  which are in the middle of a multibyte instruction
;  or are addresses outside the initialized space
;
X0001	equ	1
X0004	equ	4
X0005	equ	5
X0012	equ	12h
X0015	equ	15h
X003d	equ	3dh
X003e	equ	3eh
X0041	equ	41h
X0048	equ	48h
X0093	equ	93h
X00a1	equ	0a1h
X00a4	equ	0a4h
X00a5	equ	0a5h
X00a8	equ	0a8h
;
	end
;

